"""init

Revision ID: 6add017df4f0
Revises: 
Create Date: 2023-07-26 08:07:17.461606

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '6add017df4f0'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('agro_emisiones',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('topic', sa.String(), nullable=True),
    sa.Column('bloque', sa.String(), nullable=True),
    sa.Column('tipo', sa.String(), nullable=True),
    sa.Column('2018', sa.Float(), nullable=True),
    sa.Column('2020', sa.Float(), nullable=True),
    sa.Column('2025', sa.Float(), nullable=True),
    sa.Column('2030', sa.Float(), nullable=True),
    sa.Column('2035', sa.Float(), nullable=True),
    sa.Column('2040', sa.Float(), nullable=True),
    sa.Column('2045', sa.Float(), nullable=True),
    sa.Column('2050', sa.Float(), nullable=True),
    sa.Column('unidad', sa.String(), nullable=True),
    sa.Column('medida_1', sa.Integer(), nullable=True),
    sa.Column('medida_2', sa.Integer(), nullable=True),
    sa.Column('medida_3', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_agro_emisiones_id'), 'agro_emisiones', ['id'], unique=False)
    op.create_table('agro_salidas_biocombustibles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('topic', sa.String(), nullable=True),
    sa.Column('tipo', sa.String(), nullable=True),
    sa.Column('2018', sa.Float(), nullable=True),
    sa.Column('2020', sa.Float(), nullable=True),
    sa.Column('2025', sa.Float(), nullable=True),
    sa.Column('2030', sa.Float(), nullable=True),
    sa.Column('2035', sa.Float(), nullable=True),
    sa.Column('2040', sa.Float(), nullable=True),
    sa.Column('2045', sa.Float(), nullable=True),
    sa.Column('2050', sa.Float(), nullable=True),
    sa.Column('unidad', sa.String(), nullable=True),
    sa.Column('medida_1', sa.Integer(), nullable=True),
    sa.Column('medida_2', sa.Integer(), nullable=True),
    sa.Column('medida_3', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_agro_salidas_biocombustibles_id'), 'agro_salidas_biocombustibles', ['id'], unique=False)
    op.create_table('agro_salidas_cultivos',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('topic', sa.String(), nullable=True),
    sa.Column('bloque', sa.String(), nullable=True),
    sa.Column('tipo', sa.String(), nullable=True),
    sa.Column('2018', sa.Float(), nullable=True),
    sa.Column('2020', sa.Float(), nullable=True),
    sa.Column('2025', sa.Float(), nullable=True),
    sa.Column('2030', sa.Float(), nullable=True),
    sa.Column('2035', sa.Float(), nullable=True),
    sa.Column('2040', sa.Float(), nullable=True),
    sa.Column('2045', sa.Float(), nullable=True),
    sa.Column('2050', sa.Float(), nullable=True),
    sa.Column('unidad', sa.String(), nullable=True),
    sa.Column('medida_1', sa.Integer(), nullable=True),
    sa.Column('medida_2', sa.Integer(), nullable=True),
    sa.Column('medida_3', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_agro_salidas_cultivos_id'), 'agro_salidas_cultivos', ['id'], unique=False)
    op.create_table('agro_sf_areas_de_implementacion_de_mejores_practicas_agricolas',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('topic', sa.String(), nullable=True),
    sa.Column('tipo', sa.String(), nullable=True),
    sa.Column('2018', sa.Float(), nullable=True),
    sa.Column('2020', sa.Float(), nullable=True),
    sa.Column('2025', sa.Float(), nullable=True),
    sa.Column('2030', sa.Float(), nullable=True),
    sa.Column('2035', sa.Float(), nullable=True),
    sa.Column('2040', sa.Float(), nullable=True),
    sa.Column('2045', sa.Float(), nullable=True),
    sa.Column('2050', sa.Float(), nullable=True),
    sa.Column('unidad', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_agro_sf_areas_de_implementacion_de_mejores_practicas_agricolas_id'), 'agro_sf_areas_de_implementacion_de_mejores_practicas_agricolas', ['id'], unique=False)
    op.create_table('agro_sf_factor_de_emision_de_cultivo_usado_para_biocombustibles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('topic', sa.String(), nullable=True),
    sa.Column('tipo', sa.String(), nullable=True),
    sa.Column('value', sa.Float(), nullable=True),
    sa.Column('unidad', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_agro_sf_factor_de_emision_de_cultivo_usado_para_biocombustibles_id'), 'agro_sf_factor_de_emision_de_cultivo_usado_para_biocombustibles', ['id'], unique=False)
    op.create_table('agro_sf_factor_de_produccion_biomasa_por_cultivo',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('topic', sa.String(), nullable=True),
    sa.Column('tipo', sa.String(), nullable=True),
    sa.Column('value', sa.Float(), nullable=True),
    sa.Column('unidad', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_agro_sf_factor_de_produccion_biomasa_por_cultivo_id'), 'agro_sf_factor_de_produccion_biomasa_por_cultivo', ['id'], unique=False)
    op.create_table('agro_sf_factor_de_produccion_de_biocombustibles_por_ha_segun_tipo_de_cultivo',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('topic', sa.String(), nullable=True),
    sa.Column('tipo', sa.String(), nullable=True),
    sa.Column('value', sa.Float(), nullable=True),
    sa.Column('unidad', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_agro_sf_factor_de_produccion_de_biocombustibles_por_ha_segun_tipo_de_cultivo_id'), 'agro_sf_factor_de_produccion_de_biocombustibles_por_ha_segun_tipo_de_cultivo', ['id'], unique=False)
    op.create_table('agro_sf_porcentaje_del_cultivo_usado_para_biocombustibles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('topic', sa.String(), nullable=True),
    sa.Column('tipo', sa.String(), nullable=True),
    sa.Column('value', sa.Float(), nullable=True),
    sa.Column('unidad', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_agro_sf_porcentaje_del_cultivo_usado_para_biocombustibles_id'), 'agro_sf_porcentaje_del_cultivo_usado_para_biocombustibles', ['id'], unique=False)
    op.create_table('agro_sf_potencial_energetico_por_unidad_de_biomasa',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('topic', sa.String(), nullable=True),
    sa.Column('bloque', sa.String(), nullable=True),
    sa.Column('tipo', sa.String(), nullable=True),
    sa.Column('factor', sa.Float(), nullable=True),
    sa.Column('unidad_factor', sa.String(), nullable=True),
    sa.Column('potencial', sa.Float(), nullable=True),
    sa.Column('unidad_potencial', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_agro_sf_potencial_energetico_por_unidad_de_biomasa_id'), 'agro_sf_potencial_energetico_por_unidad_de_biomasa', ['id'], unique=False)
    op.create_table('agro_sf_produccion_biocombustibles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('topic', sa.String(), nullable=True),
    sa.Column('tipo', sa.String(), nullable=True),
    sa.Column('value', sa.Float(), nullable=True),
    sa.Column('unidad', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_agro_sf_produccion_biocombustibles_id'), 'agro_sf_produccion_biocombustibles', ['id'], unique=False)
    op.create_table('agro_sf_tasas_de_crecimiento_del_pib_sectorial_de_agricultura',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('topic', sa.String(), nullable=True),
    sa.Column('tipo', sa.String(), nullable=True),
    sa.Column('2018', sa.Float(), nullable=True),
    sa.Column('2020', sa.Float(), nullable=True),
    sa.Column('2025', sa.Float(), nullable=True),
    sa.Column('2030', sa.Float(), nullable=True),
    sa.Column('2035', sa.Float(), nullable=True),
    sa.Column('2040', sa.Float(), nullable=True),
    sa.Column('2045', sa.Float(), nullable=True),
    sa.Column('2050', sa.Float(), nullable=True),
    sa.Column('unidad', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_agro_sf_tasas_de_crecimiento_del_pib_sectorial_de_agricultura_id'), 'agro_sf_tasas_de_crecimiento_del_pib_sectorial_de_agricultura', ['id'], unique=False)
    op.create_table('agro_sf_uso_actual_de_la_tierra_sector_agropecuario_en_colombia',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('topic', sa.String(), nullable=True),
    sa.Column('tipo', sa.String(), nullable=True),
    sa.Column('fuente', sa.String(), nullable=True),
    sa.Column('valor', sa.Float(), nullable=True),
    sa.Column('unidad', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_agro_sf_uso_actual_de_la_tierra_sector_agropecuario_en_colombia_id'), 'agro_sf_uso_actual_de_la_tierra_sector_agropecuario_en_colombia', ['id'], unique=False)
    op.create_table('agro_st_mejores_practicas_agricolas_superficie_de_implementacion',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('topic', sa.String(), nullable=True),
    sa.Column('tipo', sa.String(), nullable=True),
    sa.Column('trayectoria', sa.Integer(), nullable=True),
    sa.Column('2018', sa.Float(), nullable=True),
    sa.Column('2020', sa.Float(), nullable=True),
    sa.Column('2025', sa.Float(), nullable=True),
    sa.Column('2030', sa.Float(), nullable=True),
    sa.Column('2035', sa.Float(), nullable=True),
    sa.Column('2040', sa.Float(), nullable=True),
    sa.Column('2045', sa.Float(), nullable=True),
    sa.Column('2050', sa.Float(), nullable=True),
    sa.Column('unidad', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_agro_st_mejores_practicas_agricolas_superficie_de_implementacion_id'), 'agro_st_mejores_practicas_agricolas_superficie_de_implementacion', ['id'], unique=False)
    op.create_table('agro_st_tierra_dedicada_para_biocombustibles_superficie_de_implementacion',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('topic', sa.String(), nullable=True),
    sa.Column('tipo', sa.String(), nullable=True),
    sa.Column('trayectoria', sa.Integer(), nullable=True),
    sa.Column('2018', sa.Float(), nullable=True),
    sa.Column('2020', sa.Float(), nullable=True),
    sa.Column('2025', sa.Float(), nullable=True),
    sa.Column('2030', sa.Float(), nullable=True),
    sa.Column('2035', sa.Float(), nullable=True),
    sa.Column('2040', sa.Float(), nullable=True),
    sa.Column('2045', sa.Float(), nullable=True),
    sa.Column('2050', sa.Float(), nullable=True),
    sa.Column('unidad', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_agro_st_tierra_dedicada_para_biocombustibles_superficie_de_implementacion_id'), 'agro_st_tierra_dedicada_para_biocombustibles_superficie_de_implementacion', ['id'], unique=False)
    op.create_table('bosq_emisiones',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('topic', sa.String(), nullable=True),
    sa.Column('tipo', sa.String(), nullable=True),
    sa.Column('2018', sa.Float(), nullable=True),
    sa.Column('2020', sa.Float(), nullable=True),
    sa.Column('2025', sa.Float(), nullable=True),
    sa.Column('2030', sa.Float(), nullable=True),
    sa.Column('2035', sa.Float(), nullable=True),
    sa.Column('2040', sa.Float(), nullable=True),
    sa.Column('2045', sa.Float(), nullable=True),
    sa.Column('2050', sa.Float(), nullable=True),
    sa.Column('unidad', sa.String(), nullable=True),
    sa.Column('medida_1', sa.Integer(), nullable=True),
    sa.Column('medida_2', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_bosq_emisiones_id'), 'bosq_emisiones', ['id'], unique=False)
    op.create_table('bosq_salidas',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('topic', sa.String(), nullable=True),
    sa.Column('tipo', sa.String(), nullable=True),
    sa.Column('2018', sa.Float(), nullable=True),
    sa.Column('2020', sa.Float(), nullable=True),
    sa.Column('2025', sa.Float(), nullable=True),
    sa.Column('2030', sa.Float(), nullable=True),
    sa.Column('2035', sa.Float(), nullable=True),
    sa.Column('2040', sa.Float(), nullable=True),
    sa.Column('2045', sa.Float(), nullable=True),
    sa.Column('2050', sa.Float(), nullable=True),
    sa.Column('unidad', sa.String(), nullable=True),
    sa.Column('medida_1', sa.Integer(), nullable=True),
    sa.Column('medida_2', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_bosq_salidas_id'), 'bosq_salidas', ['id'], unique=False)
    op.create_table('bosq_sf_area_anual_deforestada_puntual',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('topic', sa.String(), nullable=True),
    sa.Column('tipo', sa.String(), nullable=True),
    sa.Column('2018', sa.Float(), nullable=True),
    sa.Column('2020', sa.Float(), nullable=True),
    sa.Column('2025', sa.Float(), nullable=True),
    sa.Column('2030', sa.Float(), nullable=True),
    sa.Column('2035', sa.Float(), nullable=True),
    sa.Column('2040', sa.Float(), nullable=True),
    sa.Column('2045', sa.Float(), nullable=True),
    sa.Column('2050', sa.Float(), nullable=True),
    sa.Column('unidad', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_bosq_sf_area_anual_deforestada_puntual_id'), 'bosq_sf_area_anual_deforestada_puntual', ['id'], unique=False)
    op.create_table('bosq_sf_area_para_la_reforestacion_comercial',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('topic', sa.String(), nullable=True),
    sa.Column('bloque', sa.String(), nullable=True),
    sa.Column('tipo', sa.String(), nullable=True),
    sa.Column('2018', sa.Float(), nullable=True),
    sa.Column('2020', sa.Float(), nullable=True),
    sa.Column('2025', sa.Float(), nullable=True),
    sa.Column('2030', sa.Float(), nullable=True),
    sa.Column('2035', sa.Float(), nullable=True),
    sa.Column('2040', sa.Float(), nullable=True),
    sa.Column('2045', sa.Float(), nullable=True),
    sa.Column('2050', sa.Float(), nullable=True),
    sa.Column('unidad', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_bosq_sf_area_para_la_reforestacion_comercial_id'), 'bosq_sf_area_para_la_reforestacion_comercial', ['id'], unique=False)
    op.create_table('bosq_sf_biomasa_aerea_subterranea_reforestacion_comercial',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('topic', sa.String(), nullable=True),
    sa.Column('fuente', sa.String(), nullable=True),
    sa.Column('valor', sa.Float(), nullable=True),
    sa.Column('unidad', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_bosq_sf_biomasa_aerea_subterranea_reforestacion_comercial_id'), 'bosq_sf_biomasa_aerea_subterranea_reforestacion_comercial', ['id'], unique=False)
    op.create_table('bosq_sf_contenidos_de_carbono_por_zonas_naturales',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('topic', sa.String(), nullable=True),
    sa.Column('tipo', sa.String(), nullable=True),
    sa.Column('value', sa.Float(), nullable=True),
    sa.Column('unidad', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_bosq_sf_contenidos_de_carbono_por_zonas_naturales_id'), 'bosq_sf_contenidos_de_carbono_por_zonas_naturales', ['id'], unique=False)
    op.create_table('bosq_sf_deforestacion_observada_no_acumulada',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('topic', sa.String(), nullable=True),
    sa.Column('fuente', sa.String(), nullable=True),
    sa.Column('valor', sa.Float(), nullable=True),
    sa.Column('unidad', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_bosq_sf_deforestacion_observada_no_acumulada_id'), 'bosq_sf_deforestacion_observada_no_acumulada', ['id'], unique=False)
    op.create_table('bosq_sf_descuentos_aplicables_a_reforestacion_comercial',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('topic', sa.String(), nullable=True),
    sa.Column('tipo', sa.String(), nullable=True),
    sa.Column('fuente', sa.String(), nullable=True),
    sa.Column('valor', sa.Float(), nullable=True),
    sa.Column('unidad', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_bosq_sf_descuentos_aplicables_a_reforestacion_comercial_id'), 'bosq_sf_descuentos_aplicables_a_reforestacion_comercial', ['id'], unique=False)
    op.create_table('bosq_sf_factor_de_conversion_de_biomasa_por_deforestacion',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('topic', sa.String(), nullable=True),
    sa.Column('tipo', sa.String(), nullable=True),
    sa.Column('value', sa.Float(), nullable=True),
    sa.Column('unidad', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_bosq_sf_factor_de_conversion_de_biomasa_por_deforestacion_id'), 'bosq_sf_factor_de_conversion_de_biomasa_por_deforestacion', ['id'], unique=False)
    op.create_table('bosq_st_desarrollo_y_consolidacion_de_la_cadena_productiva_de_las_plantaciones_forestales_con_fines_comerciales',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('topic', sa.String(), nullable=True),
    sa.Column('tipo', sa.String(), nullable=True),
    sa.Column('trayectoria', sa.Integer(), nullable=True),
    sa.Column('2018', sa.Float(), nullable=True),
    sa.Column('2020', sa.Float(), nullable=True),
    sa.Column('2025', sa.Float(), nullable=True),
    sa.Column('2030', sa.Float(), nullable=True),
    sa.Column('2035', sa.Float(), nullable=True),
    sa.Column('2040', sa.Float(), nullable=True),
    sa.Column('2045', sa.Float(), nullable=True),
    sa.Column('2050', sa.Float(), nullable=True),
    sa.Column('unidad', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_bosq_st_desarrollo_y_consolidacion_de_la_cadena_productiva_de_las_plantaciones_forestales_con_fines_comerciales_id'), 'bosq_st_desarrollo_y_consolidacion_de_la_cadena_productiva_de_las_plantaciones_forestales_con_fines_comerciales', ['id'], unique=False)
    op.create_table('bosq_st_escenarios_de_deforestacion',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('topic', sa.String(), nullable=True),
    sa.Column('tipo', sa.String(), nullable=True),
    sa.Column('trayectoria', sa.Integer(), nullable=True),
    sa.Column('2018', sa.Float(), nullable=True),
    sa.Column('2020', sa.Float(), nullable=True),
    sa.Column('2025', sa.Float(), nullable=True),
    sa.Column('2030', sa.Float(), nullable=True),
    sa.Column('2035', sa.Float(), nullable=True),
    sa.Column('2040', sa.Float(), nullable=True),
    sa.Column('2045', sa.Float(), nullable=True),
    sa.Column('2050', sa.Float(), nullable=True),
    sa.Column('unidad', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_bosq_st_escenarios_de_deforestacion_id'), 'bosq_st_escenarios_de_deforestacion', ['id'], unique=False)
    op.create_table('gana_emisiones',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('topic', sa.String(), nullable=True),
    sa.Column('tipo', sa.String(), nullable=True),
    sa.Column('2018', sa.Float(), nullable=True),
    sa.Column('2020', sa.Float(), nullable=True),
    sa.Column('2025', sa.Float(), nullable=True),
    sa.Column('2030', sa.Float(), nullable=True),
    sa.Column('2035', sa.Float(), nullable=True),
    sa.Column('2040', sa.Float(), nullable=True),
    sa.Column('2045', sa.Float(), nullable=True),
    sa.Column('2050', sa.Float(), nullable=True),
    sa.Column('unidad', sa.String(), nullable=True),
    sa.Column('medida_1', sa.Integer(), nullable=True),
    sa.Column('medida_2', sa.Integer(), nullable=True),
    sa.Column('medida_3', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_gana_emisiones_id'), 'gana_emisiones', ['id'], unique=False)
    op.create_table('gana_salidas',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('topic', sa.String(), nullable=True),
    sa.Column('tipo', sa.String(), nullable=True),
    sa.Column('2018', sa.Float(), nullable=True),
    sa.Column('2020', sa.Float(), nullable=True),
    sa.Column('2025', sa.Float(), nullable=True),
    sa.Column('2030', sa.Float(), nullable=True),
    sa.Column('2035', sa.Float(), nullable=True),
    sa.Column('2040', sa.Float(), nullable=True),
    sa.Column('2045', sa.Float(), nullable=True),
    sa.Column('2050', sa.Float(), nullable=True),
    sa.Column('unidad', sa.String(), nullable=True),
    sa.Column('medida_1', sa.Integer(), nullable=True),
    sa.Column('medida_2', sa.Integer(), nullable=True),
    sa.Column('medida_3', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_gana_salidas_id'), 'gana_salidas', ['id'], unique=False)
    op.create_table('gana_sf_areas_iniciales_de_implementacion_para_practicas_sostenibles_en_suelos_ganaderos',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('topic', sa.String(), nullable=True),
    sa.Column('tipo', sa.String(), nullable=True),
    sa.Column('value', sa.Float(), nullable=True),
    sa.Column('unidad', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_gana_sf_areas_iniciales_de_implementacion_para_practicas_sostenibles_en_suelos_ganaderos_id'), 'gana_sf_areas_iniciales_de_implementacion_para_practicas_sostenibles_en_suelos_ganaderos', ['id'], unique=False)
    op.create_table('gana_sf_coeficiente_de_remocion_de_carbono_para_los_distintos_usos_de_suelo_y_ecorregion_anual',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('topic', sa.String(), nullable=True),
    sa.Column('tipo', sa.String(), nullable=True),
    sa.Column('fuente', sa.String(), nullable=True),
    sa.Column('valor', sa.Float(), nullable=True),
    sa.Column('unidad', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_gana_sf_coeficiente_de_remocion_de_carbono_para_los_distintos_usos_de_suelo_y_ecorregion_anual_id'), 'gana_sf_coeficiente_de_remocion_de_carbono_para_los_distintos_usos_de_suelo_y_ecorregion_anual', ['id'], unique=False)
    op.create_table('gana_sf_factor_de_emision_de_metano_ch4_por_genero',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('topic', sa.String(), nullable=True),
    sa.Column('fuente', sa.String(), nullable=True),
    sa.Column('valor', sa.Float(), nullable=True),
    sa.Column('unidad', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_gana_sf_factor_de_emision_de_metano_ch4_por_genero_id'), 'gana_sf_factor_de_emision_de_metano_ch4_por_genero', ['id'], unique=False)
    op.create_table('gana_sf_factor_produccion_de_estiercol_por_cabeza_de_ganado_y_emisiones',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('topic', sa.String(), nullable=True),
    sa.Column('fuente', sa.String(), nullable=True),
    sa.Column('valor', sa.Float(), nullable=True),
    sa.Column('unidad', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_gana_sf_factor_produccion_de_estiercol_por_cabeza_de_ganado_y_emisiones_id'), 'gana_sf_factor_produccion_de_estiercol_por_cabeza_de_ganado_y_emisiones', ['id'], unique=False)
    op.create_table('gana_sf_hato_ganadero_colombiano',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('topic', sa.String(), nullable=True),
    sa.Column('tipo', sa.String(), nullable=True),
    sa.Column('2018', sa.Float(), nullable=True),
    sa.Column('2020', sa.Float(), nullable=True),
    sa.Column('2025', sa.Float(), nullable=True),
    sa.Column('2030', sa.Float(), nullable=True),
    sa.Column('2035', sa.Float(), nullable=True),
    sa.Column('2040', sa.Float(), nullable=True),
    sa.Column('2045', sa.Float(), nullable=True),
    sa.Column('2050', sa.Float(), nullable=True),
    sa.Column('unidad', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_gana_sf_hato_ganadero_colombiano_id'), 'gana_sf_hato_ganadero_colombiano', ['id'], unique=False)
    op.create_table('gana_sf_potencial_de_reduccion_de_emisiones_de_mejores_practicas_pecuarias',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('topic', sa.String(), nullable=True),
    sa.Column('tipo', sa.String(), nullable=True),
    sa.Column('2018', sa.Float(), nullable=True),
    sa.Column('2020', sa.Float(), nullable=True),
    sa.Column('2025', sa.Float(), nullable=True),
    sa.Column('2030', sa.Float(), nullable=True),
    sa.Column('2035', sa.Float(), nullable=True),
    sa.Column('2040', sa.Float(), nullable=True),
    sa.Column('2045', sa.Float(), nullable=True),
    sa.Column('2050', sa.Float(), nullable=True),
    sa.Column('unidad', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_gana_sf_potencial_de_reduccion_de_emisiones_de_mejores_practicas_pecuarias_id'), 'gana_sf_potencial_de_reduccion_de_emisiones_de_mejores_practicas_pecuarias', ['id'], unique=False)
    op.create_table('gana_sf_potencial_de_reduccion_de_emisiones_practicas_sostenibles_en_suelos_ganaderos',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('topic', sa.String(), nullable=True),
    sa.Column('tipo', sa.String(), nullable=True),
    sa.Column('2018', sa.Float(), nullable=True),
    sa.Column('2020', sa.Float(), nullable=True),
    sa.Column('2025', sa.Float(), nullable=True),
    sa.Column('2030', sa.Float(), nullable=True),
    sa.Column('2035', sa.Float(), nullable=True),
    sa.Column('2040', sa.Float(), nullable=True),
    sa.Column('2045', sa.Float(), nullable=True),
    sa.Column('2050', sa.Float(), nullable=True),
    sa.Column('unidad', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_gana_sf_potencial_de_reduccion_de_emisiones_practicas_sostenibles_en_suelos_ganaderos_id'), 'gana_sf_potencial_de_reduccion_de_emisiones_practicas_sostenibles_en_suelos_ganaderos', ['id'], unique=False)
    op.create_table('gana_sf_potencial_energetico_del_estiercol',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('topic', sa.String(), nullable=True),
    sa.Column('tipo', sa.String(), nullable=True),
    sa.Column('value', sa.Float(), nullable=True),
    sa.Column('unidad', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_gana_sf_potencial_energetico_del_estiercol_id'), 'gana_sf_potencial_energetico_del_estiercol', ['id'], unique=False)
    op.create_table('gana_sf_uso_actual_de_la_tierra_sector_agropecuario_en_colombia',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('topic', sa.String(), nullable=True),
    sa.Column('tipo', sa.String(), nullable=True),
    sa.Column('fuente', sa.String(), nullable=True),
    sa.Column('valor', sa.Float(), nullable=True),
    sa.Column('unidad', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_gana_sf_uso_actual_de_la_tierra_sector_agropecuario_en_colombia_id'), 'gana_sf_uso_actual_de_la_tierra_sector_agropecuario_en_colombia', ['id'], unique=False)
    op.create_table('gana_st_mejores_practicas_pecuarias_porcentaje_de_cabezas_de_ganado',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('topic', sa.String(), nullable=True),
    sa.Column('tipo', sa.String(), nullable=True),
    sa.Column('trayectoria', sa.Integer(), nullable=True),
    sa.Column('2018', sa.Float(), nullable=True),
    sa.Column('2020', sa.Float(), nullable=True),
    sa.Column('2025', sa.Float(), nullable=True),
    sa.Column('2030', sa.Float(), nullable=True),
    sa.Column('2035', sa.Float(), nullable=True),
    sa.Column('2040', sa.Float(), nullable=True),
    sa.Column('2045', sa.Float(), nullable=True),
    sa.Column('2050', sa.Float(), nullable=True),
    sa.Column('unidad', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_gana_st_mejores_practicas_pecuarias_porcentaje_de_cabezas_de_ganado_id'), 'gana_st_mejores_practicas_pecuarias_porcentaje_de_cabezas_de_ganado', ['id'], unique=False)
    op.create_table('gana_st_practicas_sostenibles_en_suelos_ganaderos_crecimiento_estimado_de_superficies',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('topic', sa.String(), nullable=True),
    sa.Column('tipo', sa.String(), nullable=True),
    sa.Column('trayectoria', sa.Integer(), nullable=True),
    sa.Column('2018', sa.Float(), nullable=True),
    sa.Column('2020', sa.Float(), nullable=True),
    sa.Column('2025', sa.Float(), nullable=True),
    sa.Column('2030', sa.Float(), nullable=True),
    sa.Column('2035', sa.Float(), nullable=True),
    sa.Column('2040', sa.Float(), nullable=True),
    sa.Column('2045', sa.Float(), nullable=True),
    sa.Column('2050', sa.Float(), nullable=True),
    sa.Column('unidad', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_gana_st_practicas_sostenibles_en_suelos_ganaderos_crecimiento_estimado_de_superficies_id'), 'gana_st_practicas_sostenibles_en_suelos_ganaderos_crecimiento_estimado_de_superficies', ['id'], unique=False)
    op.create_table('gana_st_produccion_de_estiercol_para_bioenergia',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('topic', sa.String(), nullable=True),
    sa.Column('tipo', sa.String(), nullable=True),
    sa.Column('trayectoria', sa.Integer(), nullable=True),
    sa.Column('2018', sa.Float(), nullable=True),
    sa.Column('2020', sa.Float(), nullable=True),
    sa.Column('2025', sa.Float(), nullable=True),
    sa.Column('2030', sa.Float(), nullable=True),
    sa.Column('2035', sa.Float(), nullable=True),
    sa.Column('2040', sa.Float(), nullable=True),
    sa.Column('2045', sa.Float(), nullable=True),
    sa.Column('2050', sa.Float(), nullable=True),
    sa.Column('unidad', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_gana_st_produccion_de_estiercol_para_bioenergia_id'), 'gana_st_produccion_de_estiercol_para_bioenergia', ['id'], unique=False)
    op.create_table('indu_emisiones_gases_efecto_invernadero',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('topic', sa.String(), nullable=True),
    sa.Column('tipo', sa.String(), nullable=True),
    sa.Column('2018', sa.Float(), nullable=True),
    sa.Column('2020', sa.Float(), nullable=True),
    sa.Column('2025', sa.Float(), nullable=True),
    sa.Column('2030', sa.Float(), nullable=True),
    sa.Column('2035', sa.Float(), nullable=True),
    sa.Column('2040', sa.Float(), nullable=True),
    sa.Column('2045', sa.Float(), nullable=True),
    sa.Column('2050', sa.Float(), nullable=True),
    sa.Column('unidad', sa.String(), nullable=True),
    sa.Column('medida_1', sa.Integer(), nullable=True),
    sa.Column('medida_2', sa.Integer(), nullable=True),
    sa.Column('medida_3', sa.Integer(), nullable=True),
    sa.Column('medida_4', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_indu_emisiones_gases_efecto_invernadero_id'), 'indu_emisiones_gases_efecto_invernadero', ['id'], unique=False)
    op.create_table('indu_emisiones_por_el_consumo_de_bagazo_y_otros',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('topic', sa.String(), nullable=True),
    sa.Column('tipo', sa.String(), nullable=True),
    sa.Column('2018', sa.Float(), nullable=True),
    sa.Column('2020', sa.Float(), nullable=True),
    sa.Column('2025', sa.Float(), nullable=True),
    sa.Column('2030', sa.Float(), nullable=True),
    sa.Column('2035', sa.Float(), nullable=True),
    sa.Column('2040', sa.Float(), nullable=True),
    sa.Column('2045', sa.Float(), nullable=True),
    sa.Column('2050', sa.Float(), nullable=True),
    sa.Column('unidad', sa.String(), nullable=True),
    sa.Column('medida_1', sa.Integer(), nullable=True),
    sa.Column('medida_2', sa.Integer(), nullable=True),
    sa.Column('medida_3', sa.Integer(), nullable=True),
    sa.Column('medida_4', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_indu_emisiones_por_el_consumo_de_bagazo_y_otros_id'), 'indu_emisiones_por_el_consumo_de_bagazo_y_otros', ['id'], unique=False)
    op.create_table('indu_emisiones_sao',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('topic', sa.String(), nullable=True),
    sa.Column('tipo', sa.String(), nullable=True),
    sa.Column('2018', sa.Float(), nullable=True),
    sa.Column('2020', sa.Float(), nullable=True),
    sa.Column('2025', sa.Float(), nullable=True),
    sa.Column('2030', sa.Float(), nullable=True),
    sa.Column('2035', sa.Float(), nullable=True),
    sa.Column('2040', sa.Float(), nullable=True),
    sa.Column('2045', sa.Float(), nullable=True),
    sa.Column('2050', sa.Float(), nullable=True),
    sa.Column('unidad', sa.String(), nullable=True),
    sa.Column('medida_1', sa.Integer(), nullable=True),
    sa.Column('medida_2', sa.Integer(), nullable=True),
    sa.Column('medida_3', sa.Integer(), nullable=True),
    sa.Column('medida_4', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_indu_emisiones_sao_id'), 'indu_emisiones_sao', ['id'], unique=False)
    op.create_table('indu_salidas_por_combustible_balance_total_de_la_energia_requerida',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('bloque', sa.String(), nullable=True),
    sa.Column('topic', sa.String(), nullable=True),
    sa.Column('tipo', sa.String(), nullable=True),
    sa.Column('2018', sa.Float(), nullable=True),
    sa.Column('2020', sa.Float(), nullable=True),
    sa.Column('2025', sa.Float(), nullable=True),
    sa.Column('2030', sa.Float(), nullable=True),
    sa.Column('2035', sa.Float(), nullable=True),
    sa.Column('2040', sa.Float(), nullable=True),
    sa.Column('2045', sa.Float(), nullable=True),
    sa.Column('2050', sa.Float(), nullable=True),
    sa.Column('unidad', sa.String(), nullable=True),
    sa.Column('medida_1', sa.Integer(), nullable=True),
    sa.Column('medida_2', sa.Integer(), nullable=True),
    sa.Column('medida_3', sa.Integer(), nullable=True),
    sa.Column('medida_4', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_indu_salidas_por_combustible_balance_total_de_la_energia_requerida_id'), 'indu_salidas_por_combustible_balance_total_de_la_energia_requerida', ['id'], unique=False)
    op.create_table('indu_salidas_por_combustible_energia_producida_por_autogeneracion_y_cogeneracion',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('bloque', sa.String(), nullable=True),
    sa.Column('topic', sa.String(), nullable=True),
    sa.Column('tipo', sa.String(), nullable=True),
    sa.Column('2018', sa.Float(), nullable=True),
    sa.Column('2020', sa.Float(), nullable=True),
    sa.Column('2025', sa.Float(), nullable=True),
    sa.Column('2030', sa.Float(), nullable=True),
    sa.Column('2035', sa.Float(), nullable=True),
    sa.Column('2040', sa.Float(), nullable=True),
    sa.Column('2045', sa.Float(), nullable=True),
    sa.Column('2050', sa.Float(), nullable=True),
    sa.Column('unidad', sa.String(), nullable=True),
    sa.Column('medida_1', sa.Integer(), nullable=True),
    sa.Column('medida_2', sa.Integer(), nullable=True),
    sa.Column('medida_3', sa.Integer(), nullable=True),
    sa.Column('medida_4', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_indu_salidas_por_combustible_energia_producida_por_autogeneracion_y_cogeneracion_id'), 'indu_salidas_por_combustible_energia_producida_por_autogeneracion_y_cogeneracion', ['id'], unique=False)
    op.create_table('indu_salidas_por_combustible_energia_requerida',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('bloque', sa.String(), nullable=True),
    sa.Column('topic', sa.String(), nullable=True),
    sa.Column('tipo', sa.String(), nullable=True),
    sa.Column('2018', sa.Float(), nullable=True),
    sa.Column('2020', sa.Float(), nullable=True),
    sa.Column('2025', sa.Float(), nullable=True),
    sa.Column('2030', sa.Float(), nullable=True),
    sa.Column('2035', sa.Float(), nullable=True),
    sa.Column('2040', sa.Float(), nullable=True),
    sa.Column('2045', sa.Float(), nullable=True),
    sa.Column('2050', sa.Float(), nullable=True),
    sa.Column('unidad', sa.String(), nullable=True),
    sa.Column('medida_1', sa.Integer(), nullable=True),
    sa.Column('medida_2', sa.Integer(), nullable=True),
    sa.Column('medida_3', sa.Integer(), nullable=True),
    sa.Column('medida_4', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_indu_salidas_por_combustible_energia_requerida_id'), 'indu_salidas_por_combustible_energia_requerida', ['id'], unique=False)
    op.create_table('indu_salidas_por_tipo_de_industria_balance_total_de_la_energia_requerida',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('bloque', sa.String(), nullable=True),
    sa.Column('topic', sa.String(), nullable=True),
    sa.Column('tipo', sa.String(), nullable=True),
    sa.Column('2018', sa.Float(), nullable=True),
    sa.Column('2020', sa.Float(), nullable=True),
    sa.Column('2025', sa.Float(), nullable=True),
    sa.Column('2030', sa.Float(), nullable=True),
    sa.Column('2035', sa.Float(), nullable=True),
    sa.Column('2040', sa.Float(), nullable=True),
    sa.Column('2045', sa.Float(), nullable=True),
    sa.Column('2050', sa.Float(), nullable=True),
    sa.Column('unidad', sa.String(), nullable=True),
    sa.Column('medida_1', sa.Integer(), nullable=True),
    sa.Column('medida_2', sa.Integer(), nullable=True),
    sa.Column('medida_3', sa.Integer(), nullable=True),
    sa.Column('medida_4', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_indu_salidas_por_tipo_de_industria_balance_total_de_la_energia_requerida_id'), 'indu_salidas_por_tipo_de_industria_balance_total_de_la_energia_requerida', ['id'], unique=False)
    op.create_table('indu_salidas_por_tipo_de_industria_energia_producida_por_autogeneracion_y_cogeneracion',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('bloque', sa.String(), nullable=True),
    sa.Column('topic', sa.String(), nullable=True),
    sa.Column('tipo', sa.String(), nullable=True),
    sa.Column('2018', sa.Float(), nullable=True),
    sa.Column('2020', sa.Float(), nullable=True),
    sa.Column('2025', sa.Float(), nullable=True),
    sa.Column('2030', sa.Float(), nullable=True),
    sa.Column('2035', sa.Float(), nullable=True),
    sa.Column('2040', sa.Float(), nullable=True),
    sa.Column('2045', sa.Float(), nullable=True),
    sa.Column('2050', sa.Float(), nullable=True),
    sa.Column('unidad', sa.String(), nullable=True),
    sa.Column('medida_1', sa.Integer(), nullable=True),
    sa.Column('medida_2', sa.Integer(), nullable=True),
    sa.Column('medida_3', sa.Integer(), nullable=True),
    sa.Column('medida_4', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_indu_salidas_por_tipo_de_industria_energia_producida_por_autogeneracion_y_cogeneracion_id'), 'indu_salidas_por_tipo_de_industria_energia_producida_por_autogeneracion_y_cogeneracion', ['id'], unique=False)
    op.create_table('indu_salidas_por_tipo_de_industria_energia_requerida',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('bloque', sa.String(), nullable=True),
    sa.Column('topic', sa.String(), nullable=True),
    sa.Column('tipo', sa.String(), nullable=True),
    sa.Column('2018', sa.Float(), nullable=True),
    sa.Column('2020', sa.Float(), nullable=True),
    sa.Column('2025', sa.Float(), nullable=True),
    sa.Column('2030', sa.Float(), nullable=True),
    sa.Column('2035', sa.Float(), nullable=True),
    sa.Column('2040', sa.Float(), nullable=True),
    sa.Column('2045', sa.Float(), nullable=True),
    sa.Column('2050', sa.Float(), nullable=True),
    sa.Column('unidad', sa.String(), nullable=True),
    sa.Column('medida_1', sa.Integer(), nullable=True),
    sa.Column('medida_2', sa.Integer(), nullable=True),
    sa.Column('medida_3', sa.Integer(), nullable=True),
    sa.Column('medida_4', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_indu_salidas_por_tipo_de_industria_energia_requerida_id'), 'indu_salidas_por_tipo_de_industria_energia_requerida', ['id'], unique=False)
    op.create_table('indu_sf_capacidad_instalada_de_autogeneracion',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('topic', sa.String(), nullable=True),
    sa.Column('tipo', sa.String(), nullable=True),
    sa.Column('fuente', sa.String(), nullable=True),
    sa.Column('valor', sa.Float(), nullable=True),
    sa.Column('unidad', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_indu_sf_capacidad_instalada_de_autogeneracion_id'), 'indu_sf_capacidad_instalada_de_autogeneracion', ['id'], unique=False)
    op.create_table('indu_sf_capacidad_instalada_de_cogeneracion',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('topic', sa.String(), nullable=True),
    sa.Column('tipo', sa.String(), nullable=True),
    sa.Column('fuente', sa.String(), nullable=True),
    sa.Column('valor', sa.Float(), nullable=True),
    sa.Column('unidad', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_indu_sf_capacidad_instalada_de_cogeneracion_id'), 'indu_sf_capacidad_instalada_de_cogeneracion', ['id'], unique=False)
    op.create_table('indu_sf_distribucion_segun_tipo_de_combustible_ladrilleras',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('topic', sa.String(), nullable=True),
    sa.Column('tipo', sa.String(), nullable=True),
    sa.Column('valor', sa.Float(), nullable=True),
    sa.Column('unidad', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_indu_sf_distribucion_segun_tipo_de_combustible_ladrilleras_id'), 'indu_sf_distribucion_segun_tipo_de_combustible_ladrilleras', ['id'], unique=False)
    op.create_table('indu_sf_emision_de_sao',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('topic', sa.String(), nullable=True),
    sa.Column('tipo', sa.String(), nullable=True),
    sa.Column('2018', sa.Float(), nullable=True),
    sa.Column('2020', sa.Float(), nullable=True),
    sa.Column('2025', sa.Float(), nullable=True),
    sa.Column('2030', sa.Float(), nullable=True),
    sa.Column('2035', sa.Float(), nullable=True),
    sa.Column('2040', sa.Float(), nullable=True),
    sa.Column('2045', sa.Float(), nullable=True),
    sa.Column('2050', sa.Float(), nullable=True),
    sa.Column('unidad', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_indu_sf_emision_de_sao_id'), 'indu_sf_emision_de_sao', ['id'], unique=False)
    op.create_table('indu_sf_excedentes_de_autogeneracion',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('topic', sa.String(), nullable=True),
    sa.Column('tipo', sa.String(), nullable=True),
    sa.Column('fuente', sa.String(), nullable=True),
    sa.Column('valor', sa.Float(), nullable=True),
    sa.Column('unidad', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_indu_sf_excedentes_de_autogeneracion_id'), 'indu_sf_excedentes_de_autogeneracion', ['id'], unique=False)
    op.create_table('indu_sf_excedentes_de_cogeneracion',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('topic', sa.String(), nullable=True),
    sa.Column('tipo', sa.String(), nullable=True),
    sa.Column('fuente', sa.String(), nullable=True),
    sa.Column('valor', sa.Float(), nullable=True),
    sa.Column('unidad', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_indu_sf_excedentes_de_cogeneracion_id'), 'indu_sf_excedentes_de_cogeneracion', ['id'], unique=False)
    op.create_table('indu_sf_factor_de_utilizacion_de_autogeneracion_y_cogeneracion',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('topic', sa.String(), nullable=True),
    sa.Column('tipo', sa.String(), nullable=True),
    sa.Column('valor', sa.Float(), nullable=True),
    sa.Column('unidad', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_indu_sf_factor_de_utilizacion_de_autogeneracion_y_cogeneracion_id'), 'indu_sf_factor_de_utilizacion_de_autogeneracion_y_cogeneracion', ['id'], unique=False)
    op.create_table('indu_sf_indice_de_consumo',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('topic', sa.String(), nullable=True),
    sa.Column('tipo', sa.String(), nullable=True),
    sa.Column('valor', sa.Float(), nullable=True),
    sa.Column('unidad', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_indu_sf_indice_de_consumo_id'), 'indu_sf_indice_de_consumo', ['id'], unique=False)
    op.create_table('indu_sf_produccion_anual_de_ladrillos',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('topic', sa.String(), nullable=True),
    sa.Column('tipo', sa.String(), nullable=True),
    sa.Column('2018', sa.Float(), nullable=True),
    sa.Column('2020', sa.Float(), nullable=True),
    sa.Column('2025', sa.Float(), nullable=True),
    sa.Column('2030', sa.Float(), nullable=True),
    sa.Column('2035', sa.Float(), nullable=True),
    sa.Column('2040', sa.Float(), nullable=True),
    sa.Column('2045', sa.Float(), nullable=True),
    sa.Column('2050', sa.Float(), nullable=True),
    sa.Column('unidad', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_indu_sf_produccion_anual_de_ladrillos_id'), 'indu_sf_produccion_anual_de_ladrillos', ['id'], unique=False)
    op.create_table('indu_sf_produccion_anual_de_materiales',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('topic', sa.String(), nullable=True),
    sa.Column('tipo', sa.String(), nullable=True),
    sa.Column('2018', sa.Float(), nullable=True),
    sa.Column('2020', sa.Float(), nullable=True),
    sa.Column('2025', sa.Float(), nullable=True),
    sa.Column('2030', sa.Float(), nullable=True),
    sa.Column('2035', sa.Float(), nullable=True),
    sa.Column('2040', sa.Float(), nullable=True),
    sa.Column('2045', sa.Float(), nullable=True),
    sa.Column('2050', sa.Float(), nullable=True),
    sa.Column('unidad', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_indu_sf_produccion_anual_de_materiales_id'), 'indu_sf_produccion_anual_de_materiales', ['id'], unique=False)
    op.create_table('indu_sf_produccion_de_acido_nitrico',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('topic', sa.String(), nullable=True),
    sa.Column('tipo', sa.String(), nullable=True),
    sa.Column('valor', sa.Float(), nullable=True),
    sa.Column('unidad', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_indu_sf_produccion_de_acido_nitrico_id'), 'indu_sf_produccion_de_acido_nitrico', ['id'], unique=False)
    op.create_table('indu_sf_produccion_de_cemento',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('topic', sa.String(), nullable=True),
    sa.Column('tipo', sa.String(), nullable=True),
    sa.Column('valor', sa.Float(), nullable=True),
    sa.Column('unidad', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_indu_sf_produccion_de_cemento_id'), 'indu_sf_produccion_de_cemento', ['id'], unique=False)
    op.create_table('indu_sf_uso_energetico_por_combustible',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('topic', sa.String(), nullable=True),
    sa.Column('tipo', sa.String(), nullable=True),
    sa.Column('fuente', sa.String(), nullable=True),
    sa.Column('2018', sa.Float(), nullable=True),
    sa.Column('2020', sa.Float(), nullable=True),
    sa.Column('2025', sa.Float(), nullable=True),
    sa.Column('2030', sa.Float(), nullable=True),
    sa.Column('2035', sa.Float(), nullable=True),
    sa.Column('2040', sa.Float(), nullable=True),
    sa.Column('2045', sa.Float(), nullable=True),
    sa.Column('2050', sa.Float(), nullable=True),
    sa.Column('unidad', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_indu_sf_uso_energetico_por_combustible_id'), 'indu_sf_uso_energetico_por_combustible', ['id'], unique=False)
    op.create_table('indu_st_eficiencia_energetica_autogeneracion_y_cogeneracion_ladrilleras',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('topic', sa.String(), nullable=True),
    sa.Column('trayectoria', sa.Integer(), nullable=True),
    sa.Column('2018', sa.Float(), nullable=True),
    sa.Column('2020', sa.Float(), nullable=True),
    sa.Column('2025', sa.Float(), nullable=True),
    sa.Column('2030', sa.Float(), nullable=True),
    sa.Column('2035', sa.Float(), nullable=True),
    sa.Column('2040', sa.Float(), nullable=True),
    sa.Column('2045', sa.Float(), nullable=True),
    sa.Column('2050', sa.Float(), nullable=True),
    sa.Column('unidad', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_indu_st_eficiencia_energetica_autogeneracion_y_cogeneracion_ladrilleras_id'), 'indu_st_eficiencia_energetica_autogeneracion_y_cogeneracion_ladrilleras', ['id'], unique=False)
    op.create_table('indu_st_eficiencia_energetica_crecimiento_de_autogeneracion_y_cogeneracion',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('topic', sa.String(), nullable=True),
    sa.Column('tipo', sa.String(), nullable=True),
    sa.Column('trayectoria', sa.Integer(), nullable=True),
    sa.Column('2018', sa.Float(), nullable=True),
    sa.Column('2020', sa.Float(), nullable=True),
    sa.Column('2025', sa.Float(), nullable=True),
    sa.Column('2030', sa.Float(), nullable=True),
    sa.Column('2035', sa.Float(), nullable=True),
    sa.Column('2040', sa.Float(), nullable=True),
    sa.Column('2045', sa.Float(), nullable=True),
    sa.Column('2050', sa.Float(), nullable=True),
    sa.Column('unidad', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_indu_st_eficiencia_energetica_crecimiento_de_autogeneracion_y_cogeneracion_id'), 'indu_st_eficiencia_energetica_crecimiento_de_autogeneracion_y_cogeneracion', ['id'], unique=False)
    op.create_table('indu_st_eficiencia_energetica_reduccion_de_consumo_energetico_ladrilleras',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('topic', sa.String(), nullable=True),
    sa.Column('trayectoria', sa.Integer(), nullable=True),
    sa.Column('2018', sa.Float(), nullable=True),
    sa.Column('2020', sa.Float(), nullable=True),
    sa.Column('2025', sa.Float(), nullable=True),
    sa.Column('2030', sa.Float(), nullable=True),
    sa.Column('2035', sa.Float(), nullable=True),
    sa.Column('2040', sa.Float(), nullable=True),
    sa.Column('2045', sa.Float(), nullable=True),
    sa.Column('2050', sa.Float(), nullable=True),
    sa.Column('unidad', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_indu_st_eficiencia_energetica_reduccion_de_consumo_energetico_ladrilleras_id'), 'indu_st_eficiencia_energetica_reduccion_de_consumo_energetico_ladrilleras', ['id'], unique=False)
    op.create_table('indu_st_procesos_productivos_sostenibles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('topic', sa.String(), nullable=True),
    sa.Column('tipo', sa.String(), nullable=True),
    sa.Column('trayectoria', sa.Integer(), nullable=True),
    sa.Column('2018', sa.Float(), nullable=True),
    sa.Column('2020', sa.Float(), nullable=True),
    sa.Column('2025', sa.Float(), nullable=True),
    sa.Column('2030', sa.Float(), nullable=True),
    sa.Column('2035', sa.Float(), nullable=True),
    sa.Column('2040', sa.Float(), nullable=True),
    sa.Column('2045', sa.Float(), nullable=True),
    sa.Column('2050', sa.Float(), nullable=True),
    sa.Column('unidad', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_indu_st_procesos_productivos_sostenibles_id'), 'indu_st_procesos_productivos_sostenibles', ['id'], unique=False)
    op.create_table('indu_st_reduccion_de_consumo_energetico_por_aumento_en_la_eficiencia_energetica',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('topic', sa.String(), nullable=True),
    sa.Column('tipo', sa.String(), nullable=True),
    sa.Column('trayectoria', sa.Integer(), nullable=True),
    sa.Column('2018', sa.Float(), nullable=True),
    sa.Column('2020', sa.Float(), nullable=True),
    sa.Column('2025', sa.Float(), nullable=True),
    sa.Column('2030', sa.Float(), nullable=True),
    sa.Column('2035', sa.Float(), nullable=True),
    sa.Column('2040', sa.Float(), nullable=True),
    sa.Column('2045', sa.Float(), nullable=True),
    sa.Column('2050', sa.Float(), nullable=True),
    sa.Column('unidad', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_indu_st_reduccion_de_consumo_energetico_por_aumento_en_la_eficiencia_energetica_id'), 'indu_st_reduccion_de_consumo_energetico_por_aumento_en_la_eficiencia_energetica', ['id'], unique=False)
    op.create_table('indu_st_sustitucion_de_sao_y_hfc',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('topic', sa.String(), nullable=True),
    sa.Column('tipo', sa.String(), nullable=True),
    sa.Column('trayectoria', sa.Integer(), nullable=True),
    sa.Column('2018', sa.Float(), nullable=True),
    sa.Column('2020', sa.Float(), nullable=True),
    sa.Column('2025', sa.Float(), nullable=True),
    sa.Column('2030', sa.Float(), nullable=True),
    sa.Column('2035', sa.Float(), nullable=True),
    sa.Column('2040', sa.Float(), nullable=True),
    sa.Column('2045', sa.Float(), nullable=True),
    sa.Column('2050', sa.Float(), nullable=True),
    sa.Column('unidad', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_indu_st_sustitucion_de_sao_y_hfc_id'), 'indu_st_sustitucion_de_sao_y_hfc', ['id'], unique=False)
    op.create_table('res_agu_emisiones_de_gases_de_efecto_invernadero_aguas_residuales',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('topic', sa.String(), nullable=True),
    sa.Column('bloque', sa.String(), nullable=True),
    sa.Column('tipo', sa.String(), nullable=True),
    sa.Column('2018', sa.Float(), nullable=True),
    sa.Column('2020', sa.Float(), nullable=True),
    sa.Column('2025', sa.Float(), nullable=True),
    sa.Column('2030', sa.Float(), nullable=True),
    sa.Column('2035', sa.Float(), nullable=True),
    sa.Column('2040', sa.Float(), nullable=True),
    sa.Column('2045', sa.Float(), nullable=True),
    sa.Column('2050', sa.Float(), nullable=True),
    sa.Column('unidad', sa.String(), nullable=True),
    sa.Column('medida_1', sa.Integer(), nullable=True),
    sa.Column('medida_2', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_res_agu_emisiones_de_gases_de_efecto_invernadero_aguas_residuales_id'), 'res_agu_emisiones_de_gases_de_efecto_invernadero_aguas_residuales', ['id'], unique=False)
    op.create_table('res_agu_emisiones_de_gases_de_efecto_invernadero_energia',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('topic', sa.String(), nullable=True),
    sa.Column('bloque', sa.String(), nullable=True),
    sa.Column('tipo', sa.String(), nullable=True),
    sa.Column('2018', sa.Float(), nullable=True),
    sa.Column('2020', sa.Float(), nullable=True),
    sa.Column('2025', sa.Float(), nullable=True),
    sa.Column('2030', sa.Float(), nullable=True),
    sa.Column('2035', sa.Float(), nullable=True),
    sa.Column('2040', sa.Float(), nullable=True),
    sa.Column('2045', sa.Float(), nullable=True),
    sa.Column('2050', sa.Float(), nullable=True),
    sa.Column('unidad', sa.String(), nullable=True),
    sa.Column('medida_1', sa.Integer(), nullable=True),
    sa.Column('medida_2', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_res_agu_emisiones_de_gases_de_efecto_invernadero_energia_id'), 'res_agu_emisiones_de_gases_de_efecto_invernadero_energia', ['id'], unique=False)
    op.create_table('res_agu_salidas_energia_consumida',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('topic', sa.String(), nullable=True),
    sa.Column('tipo', sa.String(), nullable=True),
    sa.Column('2018', sa.Float(), nullable=True),
    sa.Column('2020', sa.Float(), nullable=True),
    sa.Column('2025', sa.Float(), nullable=True),
    sa.Column('2030', sa.Float(), nullable=True),
    sa.Column('2035', sa.Float(), nullable=True),
    sa.Column('2040', sa.Float(), nullable=True),
    sa.Column('2045', sa.Float(), nullable=True),
    sa.Column('2050', sa.Float(), nullable=True),
    sa.Column('unidad', sa.String(), nullable=True),
    sa.Column('medida_1', sa.Integer(), nullable=True),
    sa.Column('medida_2', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_res_agu_salidas_energia_consumida_id'), 'res_agu_salidas_energia_consumida', ['id'], unique=False)
    op.create_table('res_agu_salidas_energia_producida',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('topic', sa.String(), nullable=True),
    sa.Column('tipo', sa.String(), nullable=True),
    sa.Column('2018', sa.Float(), nullable=True),
    sa.Column('2020', sa.Float(), nullable=True),
    sa.Column('2025', sa.Float(), nullable=True),
    sa.Column('2030', sa.Float(), nullable=True),
    sa.Column('2035', sa.Float(), nullable=True),
    sa.Column('2040', sa.Float(), nullable=True),
    sa.Column('2045', sa.Float(), nullable=True),
    sa.Column('2050', sa.Float(), nullable=True),
    sa.Column('unidad', sa.String(), nullable=True),
    sa.Column('medida_1', sa.Integer(), nullable=True),
    sa.Column('medida_2', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_res_agu_salidas_energia_producida_id'), 'res_agu_salidas_energia_producida', ['id'], unique=False)
    op.create_table('res_agu_sf_consumo_energetico_medio_por_tratamiento',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('topic', sa.String(), nullable=True),
    sa.Column('tipo', sa.String(), nullable=True),
    sa.Column('value', sa.Float(), nullable=True),
    sa.Column('unidad', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_res_agu_sf_consumo_energetico_medio_por_tratamiento_id'), 'res_agu_sf_consumo_energetico_medio_por_tratamiento', ['id'], unique=False)
    op.create_table('res_agu_sf_datos_de_la_generacion_energetica_de_las_estaciones_de_tratamiento',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('topic', sa.String(), nullable=True),
    sa.Column('tipo', sa.String(), nullable=True),
    sa.Column('value', sa.Float(), nullable=True),
    sa.Column('unidad', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_res_agu_sf_datos_de_la_generacion_energetica_de_las_estaciones_de_tratamiento_id'), 'res_agu_sf_datos_de_la_generacion_energetica_de_las_estaciones_de_tratamiento', ['id'], unique=False)
    op.create_table('res_agu_sf_dbo_por_m3_de_agua_residual_domestica_no_tratada',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('topic', sa.String(), nullable=True),
    sa.Column('tipo', sa.String(), nullable=True),
    sa.Column('value', sa.Float(), nullable=True),
    sa.Column('unidad', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_res_agu_sf_dbo_por_m3_de_agua_residual_domestica_no_tratada_id'), 'res_agu_sf_dbo_por_m3_de_agua_residual_domestica_no_tratada', ['id'], unique=False)
    op.create_table('res_agu_sf_dbo_por_m3_de_agua_residual_domestica_tratada',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('topic', sa.String(), nullable=True),
    sa.Column('tipo', sa.String(), nullable=True),
    sa.Column('value', sa.Float(), nullable=True),
    sa.Column('unidad', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_res_agu_sf_dbo_por_m3_de_agua_residual_domestica_tratada_id'), 'res_agu_sf_dbo_por_m3_de_agua_residual_domestica_tratada', ['id'], unique=False)
    op.create_table('res_agu_sf_dbo_por_m3_de_agua_residual_industrial_no_tratada',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('topic', sa.String(), nullable=True),
    sa.Column('tipo', sa.String(), nullable=True),
    sa.Column('value', sa.Float(), nullable=True),
    sa.Column('unidad', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_res_agu_sf_dbo_por_m3_de_agua_residual_industrial_no_tratada_id'), 'res_agu_sf_dbo_por_m3_de_agua_residual_industrial_no_tratada', ['id'], unique=False)
    op.create_table('res_agu_sf_dbo_por_m3_de_agua_residual_industrial_tratada',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('topic', sa.String(), nullable=True),
    sa.Column('tipo', sa.String(), nullable=True),
    sa.Column('value', sa.Float(), nullable=True),
    sa.Column('unidad', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_res_agu_sf_dbo_por_m3_de_agua_residual_industrial_tratada_id'), 'res_agu_sf_dbo_por_m3_de_agua_residual_industrial_tratada', ['id'], unique=False)
    op.create_table('res_agu_sf_generacion_de_ch4_por_kg_dbo_no_tratado',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('topic', sa.String(), nullable=True),
    sa.Column('tipo', sa.String(), nullable=True),
    sa.Column('value', sa.Float(), nullable=True),
    sa.Column('unidad', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_res_agu_sf_generacion_de_ch4_por_kg_dbo_no_tratado_id'), 'res_agu_sf_generacion_de_ch4_por_kg_dbo_no_tratado', ['id'], unique=False)
    op.create_table('res_agu_sf_generacion_de_ch4_por_kg_dbo_tratado',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('topic', sa.String(), nullable=True),
    sa.Column('tipo', sa.String(), nullable=True),
    sa.Column('value', sa.Float(), nullable=True),
    sa.Column('unidad', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_res_agu_sf_generacion_de_ch4_por_kg_dbo_tratado_id'), 'res_agu_sf_generacion_de_ch4_por_kg_dbo_tratado', ['id'], unique=False)
    op.create_table('res_agu_st_cantidad_de_aguas_residuales_domesticas',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('topic', sa.String(), nullable=True),
    sa.Column('tipo', sa.String(), nullable=True),
    sa.Column('trayectoria', sa.Integer(), nullable=True),
    sa.Column('2018', sa.Float(), nullable=True),
    sa.Column('2020', sa.Float(), nullable=True),
    sa.Column('2025', sa.Float(), nullable=True),
    sa.Column('2030', sa.Float(), nullable=True),
    sa.Column('2035', sa.Float(), nullable=True),
    sa.Column('2040', sa.Float(), nullable=True),
    sa.Column('2045', sa.Float(), nullable=True),
    sa.Column('2050', sa.Float(), nullable=True),
    sa.Column('unidad', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_res_agu_st_cantidad_de_aguas_residuales_domesticas_id'), 'res_agu_st_cantidad_de_aguas_residuales_domesticas', ['id'], unique=False)
    op.create_table('res_agu_st_cantidad_de_aguas_residuales_industriales',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('topic', sa.String(), nullable=True),
    sa.Column('tipo', sa.String(), nullable=True),
    sa.Column('trayectoria', sa.Integer(), nullable=True),
    sa.Column('2018', sa.Float(), nullable=True),
    sa.Column('2020', sa.Float(), nullable=True),
    sa.Column('2025', sa.Float(), nullable=True),
    sa.Column('2030', sa.Float(), nullable=True),
    sa.Column('2035', sa.Float(), nullable=True),
    sa.Column('2040', sa.Float(), nullable=True),
    sa.Column('2045', sa.Float(), nullable=True),
    sa.Column('2050', sa.Float(), nullable=True),
    sa.Column('unidad', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_res_agu_st_cantidad_de_aguas_residuales_industriales_id'), 'res_agu_st_cantidad_de_aguas_residuales_industriales', ['id'], unique=False)
    op.create_table('res_agu_st_estaciones_de_tratamiento_de_aguas_residuales_industriales_con_extraccion_de_biogas',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('topic', sa.String(), nullable=True),
    sa.Column('trayectoria', sa.Integer(), nullable=True),
    sa.Column('2018', sa.Float(), nullable=True),
    sa.Column('2020', sa.Float(), nullable=True),
    sa.Column('2025', sa.Float(), nullable=True),
    sa.Column('2030', sa.Float(), nullable=True),
    sa.Column('2035', sa.Float(), nullable=True),
    sa.Column('2040', sa.Float(), nullable=True),
    sa.Column('2045', sa.Float(), nullable=True),
    sa.Column('2050', sa.Float(), nullable=True),
    sa.Column('unidad', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_res_agu_st_estaciones_de_tratamiento_de_aguas_residuales_industriales_con_extraccion_de_biogas_id'), 'res_agu_st_estaciones_de_tratamiento_de_aguas_residuales_industriales_con_extraccion_de_biogas', ['id'], unique=False)
    op.create_table('res_agu_st_estaciones_de_tratamiento_de_aguas_residuales_municipales_con_extraccion_de_biogas',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('topic', sa.String(), nullable=True),
    sa.Column('trayectoria', sa.Integer(), nullable=True),
    sa.Column('2018', sa.Float(), nullable=True),
    sa.Column('2020', sa.Float(), nullable=True),
    sa.Column('2025', sa.Float(), nullable=True),
    sa.Column('2030', sa.Float(), nullable=True),
    sa.Column('2035', sa.Float(), nullable=True),
    sa.Column('2040', sa.Float(), nullable=True),
    sa.Column('2045', sa.Float(), nullable=True),
    sa.Column('2050', sa.Float(), nullable=True),
    sa.Column('unidad', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_res_agu_st_estaciones_de_tratamiento_de_aguas_residuales_municipales_con_extraccion_de_biogas_id'), 'res_agu_st_estaciones_de_tratamiento_de_aguas_residuales_municipales_con_extraccion_de_biogas', ['id'], unique=False)
    op.create_table('res_sol_emisiones_de_gases_de_efecto_invernadero_aguas_residuales',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('topic', sa.String(), nullable=True),
    sa.Column('bloque', sa.String(), nullable=True),
    sa.Column('grupo', sa.String(), nullable=True),
    sa.Column('tipo', sa.String(), nullable=True),
    sa.Column('2018', sa.Float(), nullable=True),
    sa.Column('2020', sa.Float(), nullable=True),
    sa.Column('2025', sa.Float(), nullable=True),
    sa.Column('2030', sa.Float(), nullable=True),
    sa.Column('2035', sa.Float(), nullable=True),
    sa.Column('2040', sa.Float(), nullable=True),
    sa.Column('2045', sa.Float(), nullable=True),
    sa.Column('2050', sa.Float(), nullable=True),
    sa.Column('unidad', sa.String(), nullable=True),
    sa.Column('medida_1', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_res_sol_emisiones_de_gases_de_efecto_invernadero_aguas_residuales_id'), 'res_sol_emisiones_de_gases_de_efecto_invernadero_aguas_residuales', ['id'], unique=False)
    op.create_table('res_sol_emisiones_de_gases_de_efecto_invernadero_energia',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('topic', sa.String(), nullable=True),
    sa.Column('bloque', sa.String(), nullable=True),
    sa.Column('grupo', sa.String(), nullable=True),
    sa.Column('tipo', sa.String(), nullable=True),
    sa.Column('2018', sa.Float(), nullable=True),
    sa.Column('2020', sa.Float(), nullable=True),
    sa.Column('2025', sa.Float(), nullable=True),
    sa.Column('2030', sa.Float(), nullable=True),
    sa.Column('2035', sa.Float(), nullable=True),
    sa.Column('2040', sa.Float(), nullable=True),
    sa.Column('2045', sa.Float(), nullable=True),
    sa.Column('2050', sa.Float(), nullable=True),
    sa.Column('unidad', sa.String(), nullable=True),
    sa.Column('medida_1', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_res_sol_emisiones_de_gases_de_efecto_invernadero_energia_id'), 'res_sol_emisiones_de_gases_de_efecto_invernadero_energia', ['id'], unique=False)
    op.create_table('res_sol_salidas_energia_consumida',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('topic', sa.String(), nullable=True),
    sa.Column('bloque', sa.String(), nullable=True),
    sa.Column('tipo', sa.String(), nullable=True),
    sa.Column('2018', sa.Float(), nullable=True),
    sa.Column('2020', sa.Float(), nullable=True),
    sa.Column('2025', sa.Float(), nullable=True),
    sa.Column('2030', sa.Float(), nullable=True),
    sa.Column('2035', sa.Float(), nullable=True),
    sa.Column('2040', sa.Float(), nullable=True),
    sa.Column('2045', sa.Float(), nullable=True),
    sa.Column('2050', sa.Float(), nullable=True),
    sa.Column('unidad', sa.String(), nullable=True),
    sa.Column('medida_1', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_res_sol_salidas_energia_consumida_id'), 'res_sol_salidas_energia_consumida', ['id'], unique=False)
    op.create_table('res_sol_salidas_energia_producida',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('topic', sa.String(), nullable=True),
    sa.Column('bloque', sa.String(), nullable=True),
    sa.Column('tipo', sa.String(), nullable=True),
    sa.Column('2018', sa.Float(), nullable=True),
    sa.Column('2020', sa.Float(), nullable=True),
    sa.Column('2025', sa.Float(), nullable=True),
    sa.Column('2030', sa.Float(), nullable=True),
    sa.Column('2035', sa.Float(), nullable=True),
    sa.Column('2040', sa.Float(), nullable=True),
    sa.Column('2045', sa.Float(), nullable=True),
    sa.Column('2050', sa.Float(), nullable=True),
    sa.Column('unidad', sa.String(), nullable=True),
    sa.Column('medida_1', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_res_sol_salidas_energia_producida_id'), 'res_sol_salidas_energia_producida', ['id'], unique=False)
    op.create_table('res_sol_sf_caracterizacion_por_tipo_de_residuos_generados',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('topic', sa.String(), nullable=True),
    sa.Column('tipo', sa.String(), nullable=True),
    sa.Column('2018', sa.Float(), nullable=True),
    sa.Column('2020', sa.Float(), nullable=True),
    sa.Column('2025', sa.Float(), nullable=True),
    sa.Column('2030', sa.Float(), nullable=True),
    sa.Column('2035', sa.Float(), nullable=True),
    sa.Column('2040', sa.Float(), nullable=True),
    sa.Column('2045', sa.Float(), nullable=True),
    sa.Column('2050', sa.Float(), nullable=True),
    sa.Column('unidad', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_res_sol_sf_caracterizacion_por_tipo_de_residuos_generados_id'), 'res_sol_sf_caracterizacion_por_tipo_de_residuos_generados', ['id'], unique=False)
    op.create_table('res_sol_sf_consumo_energetico_medio_por_tratamiento',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('topic', sa.String(), nullable=True),
    sa.Column('tipo', sa.String(), nullable=True),
    sa.Column('value', sa.Float(), nullable=True),
    sa.Column('unidad', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_res_sol_sf_consumo_energetico_medio_por_tratamiento_id'), 'res_sol_sf_consumo_energetico_medio_por_tratamiento', ['id'], unique=False)
    op.create_table('res_sol_sf_datos_de_la_generacion_energetica_mediante_incineracion',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('topic', sa.String(), nullable=True),
    sa.Column('tipo', sa.String(), nullable=True),
    sa.Column('value', sa.Float(), nullable=True),
    sa.Column('unidad', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_res_sol_sf_datos_de_la_generacion_energetica_mediante_incineracion_id'), 'res_sol_sf_datos_de_la_generacion_energetica_mediante_incineracion', ['id'], unique=False)
    op.create_table('res_sol_sf_datos_para_la_estimacion_de_las_emisiones_de_incineracion',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('topic', sa.String(), nullable=True),
    sa.Column('bloque', sa.String(), nullable=True),
    sa.Column('tipo', sa.String(), nullable=True),
    sa.Column('value', sa.Float(), nullable=True),
    sa.Column('unidad', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_res_sol_sf_datos_para_la_estimacion_de_las_emisiones_de_incineracion_id'), 'res_sol_sf_datos_para_la_estimacion_de_las_emisiones_de_incineracion', ['id'], unique=False)
    op.create_table('res_sol_sf_distribucion_de_los_residuos_por_zona_climatica',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('topic', sa.String(), nullable=True),
    sa.Column('tipo', sa.String(), nullable=True),
    sa.Column('value', sa.Float(), nullable=True),
    sa.Column('unidad', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_res_sol_sf_distribucion_de_los_residuos_por_zona_climatica_id'), 'res_sol_sf_distribucion_de_los_residuos_por_zona_climatica', ['id'], unique=False)
    op.create_table('res_sol_sf_generacion_de_metano_por_tipologia_de_residuo',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('topic', sa.String(), nullable=True),
    sa.Column('tipo', sa.String(), nullable=True),
    sa.Column('value', sa.Float(), nullable=True),
    sa.Column('unidad', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_res_sol_sf_generacion_de_metano_por_tipologia_de_residuo_id'), 'res_sol_sf_generacion_de_metano_por_tipologia_de_residuo', ['id'], unique=False)
    op.create_table('res_sol_sf_rellenos_sanitarios_con_captacion_aprovechamiento',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('topic', sa.String(), nullable=True),
    sa.Column('tipo', sa.String(), nullable=True),
    sa.Column('2018', sa.Float(), nullable=True),
    sa.Column('2020', sa.Float(), nullable=True),
    sa.Column('2025', sa.Float(), nullable=True),
    sa.Column('2030', sa.Float(), nullable=True),
    sa.Column('2035', sa.Float(), nullable=True),
    sa.Column('2040', sa.Float(), nullable=True),
    sa.Column('2045', sa.Float(), nullable=True),
    sa.Column('2050', sa.Float(), nullable=True),
    sa.Column('unidad', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_res_sol_sf_rellenos_sanitarios_con_captacion_aprovechamiento_id'), 'res_sol_sf_rellenos_sanitarios_con_captacion_aprovechamiento', ['id'], unique=False)
    op.create_table('res_sol_st_cantidad_de_residuos_generada_anual',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('topic', sa.String(), nullable=True),
    sa.Column('tipo', sa.String(), nullable=True),
    sa.Column('trayectoria', sa.Integer(), nullable=True),
    sa.Column('2018', sa.Float(), nullable=True),
    sa.Column('2020', sa.Float(), nullable=True),
    sa.Column('2025', sa.Float(), nullable=True),
    sa.Column('2030', sa.Float(), nullable=True),
    sa.Column('2035', sa.Float(), nullable=True),
    sa.Column('2040', sa.Float(), nullable=True),
    sa.Column('2045', sa.Float(), nullable=True),
    sa.Column('2050', sa.Float(), nullable=True),
    sa.Column('unidad', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_res_sol_st_cantidad_de_residuos_generada_anual_id'), 'res_sol_st_cantidad_de_residuos_generada_anual', ['id'], unique=False)
    op.create_table('res_sol_st_capacidad_instalada_para_los_sistemas_de_incineracion',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('topic', sa.String(), nullable=True),
    sa.Column('trayectoria', sa.Integer(), nullable=True),
    sa.Column('2018', sa.Float(), nullable=True),
    sa.Column('2020', sa.Float(), nullable=True),
    sa.Column('2025', sa.Float(), nullable=True),
    sa.Column('2030', sa.Float(), nullable=True),
    sa.Column('2035', sa.Float(), nullable=True),
    sa.Column('2040', sa.Float(), nullable=True),
    sa.Column('2045', sa.Float(), nullable=True),
    sa.Column('2050', sa.Float(), nullable=True),
    sa.Column('unidad', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_res_sol_st_capacidad_instalada_para_los_sistemas_de_incineracion_id'), 'res_sol_st_capacidad_instalada_para_los_sistemas_de_incineracion', ['id'], unique=False)
    op.create_table('res_sol_st_capacidad_instalada_para_los_sistemas_de_recuperacion_y_aprovechamiento_del_biogas_en_rellenos_sanitarios',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('topic', sa.String(), nullable=True),
    sa.Column('trayectoria', sa.Integer(), nullable=True),
    sa.Column('2018', sa.Float(), nullable=True),
    sa.Column('2020', sa.Float(), nullable=True),
    sa.Column('2025', sa.Float(), nullable=True),
    sa.Column('2030', sa.Float(), nullable=True),
    sa.Column('2035', sa.Float(), nullable=True),
    sa.Column('2040', sa.Float(), nullable=True),
    sa.Column('2045', sa.Float(), nullable=True),
    sa.Column('2050', sa.Float(), nullable=True),
    sa.Column('unidad', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_res_sol_st_capacidad_instalada_para_los_sistemas_de_recuperacion_y_aprovechamiento_del_biogas_en_rellenos_sanitarios_id'), 'res_sol_st_capacidad_instalada_para_los_sistemas_de_recuperacion_y_aprovechamiento_del_biogas_en_rellenos_sanitarios', ['id'], unique=False)
    op.create_table('res_sol_st_tipo_de_gestion',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('topic', sa.String(), nullable=True),
    sa.Column('tipo', sa.String(), nullable=True),
    sa.Column('trayectoria', sa.Integer(), nullable=True),
    sa.Column('2018', sa.Float(), nullable=True),
    sa.Column('2020', sa.Float(), nullable=True),
    sa.Column('2025', sa.Float(), nullable=True),
    sa.Column('2030', sa.Float(), nullable=True),
    sa.Column('2035', sa.Float(), nullable=True),
    sa.Column('2040', sa.Float(), nullable=True),
    sa.Column('2045', sa.Float(), nullable=True),
    sa.Column('2050', sa.Float(), nullable=True),
    sa.Column('unidad', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_res_sol_st_tipo_de_gestion_id'), 'res_sol_st_tipo_de_gestion', ['id'], unique=False)
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('full_name', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_superuser', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_index(op.f('ix_user_full_name'), 'user', ['full_name'], unique=False)
    op.create_index(op.f('ix_user_id'), 'user', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_user_id'), table_name='user')
    op.drop_index(op.f('ix_user_full_name'), table_name='user')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    op.drop_index(op.f('ix_res_sol_st_tipo_de_gestion_id'), table_name='res_sol_st_tipo_de_gestion')
    op.drop_table('res_sol_st_tipo_de_gestion')
    op.drop_index(op.f('ix_res_sol_st_capacidad_instalada_para_los_sistemas_de_recuperacion_y_aprovechamiento_del_biogas_en_rellenos_sanitarios_id'), table_name='res_sol_st_capacidad_instalada_para_los_sistemas_de_recuperacion_y_aprovechamiento_del_biogas_en_rellenos_sanitarios')
    op.drop_table('res_sol_st_capacidad_instalada_para_los_sistemas_de_recuperacion_y_aprovechamiento_del_biogas_en_rellenos_sanitarios')
    op.drop_index(op.f('ix_res_sol_st_capacidad_instalada_para_los_sistemas_de_incineracion_id'), table_name='res_sol_st_capacidad_instalada_para_los_sistemas_de_incineracion')
    op.drop_table('res_sol_st_capacidad_instalada_para_los_sistemas_de_incineracion')
    op.drop_index(op.f('ix_res_sol_st_cantidad_de_residuos_generada_anual_id'), table_name='res_sol_st_cantidad_de_residuos_generada_anual')
    op.drop_table('res_sol_st_cantidad_de_residuos_generada_anual')
    op.drop_index(op.f('ix_res_sol_sf_rellenos_sanitarios_con_captacion_aprovechamiento_id'), table_name='res_sol_sf_rellenos_sanitarios_con_captacion_aprovechamiento')
    op.drop_table('res_sol_sf_rellenos_sanitarios_con_captacion_aprovechamiento')
    op.drop_index(op.f('ix_res_sol_sf_generacion_de_metano_por_tipologia_de_residuo_id'), table_name='res_sol_sf_generacion_de_metano_por_tipologia_de_residuo')
    op.drop_table('res_sol_sf_generacion_de_metano_por_tipologia_de_residuo')
    op.drop_index(op.f('ix_res_sol_sf_distribucion_de_los_residuos_por_zona_climatica_id'), table_name='res_sol_sf_distribucion_de_los_residuos_por_zona_climatica')
    op.drop_table('res_sol_sf_distribucion_de_los_residuos_por_zona_climatica')
    op.drop_index(op.f('ix_res_sol_sf_datos_para_la_estimacion_de_las_emisiones_de_incineracion_id'), table_name='res_sol_sf_datos_para_la_estimacion_de_las_emisiones_de_incineracion')
    op.drop_table('res_sol_sf_datos_para_la_estimacion_de_las_emisiones_de_incineracion')
    op.drop_index(op.f('ix_res_sol_sf_datos_de_la_generacion_energetica_mediante_incineracion_id'), table_name='res_sol_sf_datos_de_la_generacion_energetica_mediante_incineracion')
    op.drop_table('res_sol_sf_datos_de_la_generacion_energetica_mediante_incineracion')
    op.drop_index(op.f('ix_res_sol_sf_consumo_energetico_medio_por_tratamiento_id'), table_name='res_sol_sf_consumo_energetico_medio_por_tratamiento')
    op.drop_table('res_sol_sf_consumo_energetico_medio_por_tratamiento')
    op.drop_index(op.f('ix_res_sol_sf_caracterizacion_por_tipo_de_residuos_generados_id'), table_name='res_sol_sf_caracterizacion_por_tipo_de_residuos_generados')
    op.drop_table('res_sol_sf_caracterizacion_por_tipo_de_residuos_generados')
    op.drop_index(op.f('ix_res_sol_salidas_energia_producida_id'), table_name='res_sol_salidas_energia_producida')
    op.drop_table('res_sol_salidas_energia_producida')
    op.drop_index(op.f('ix_res_sol_salidas_energia_consumida_id'), table_name='res_sol_salidas_energia_consumida')
    op.drop_table('res_sol_salidas_energia_consumida')
    op.drop_index(op.f('ix_res_sol_emisiones_de_gases_de_efecto_invernadero_energia_id'), table_name='res_sol_emisiones_de_gases_de_efecto_invernadero_energia')
    op.drop_table('res_sol_emisiones_de_gases_de_efecto_invernadero_energia')
    op.drop_index(op.f('ix_res_sol_emisiones_de_gases_de_efecto_invernadero_aguas_residuales_id'), table_name='res_sol_emisiones_de_gases_de_efecto_invernadero_aguas_residuales')
    op.drop_table('res_sol_emisiones_de_gases_de_efecto_invernadero_aguas_residuales')
    op.drop_index(op.f('ix_res_agu_st_estaciones_de_tratamiento_de_aguas_residuales_municipales_con_extraccion_de_biogas_id'), table_name='res_agu_st_estaciones_de_tratamiento_de_aguas_residuales_municipales_con_extraccion_de_biogas')
    op.drop_table('res_agu_st_estaciones_de_tratamiento_de_aguas_residuales_municipales_con_extraccion_de_biogas')
    op.drop_index(op.f('ix_res_agu_st_estaciones_de_tratamiento_de_aguas_residuales_industriales_con_extraccion_de_biogas_id'), table_name='res_agu_st_estaciones_de_tratamiento_de_aguas_residuales_industriales_con_extraccion_de_biogas')
    op.drop_table('res_agu_st_estaciones_de_tratamiento_de_aguas_residuales_industriales_con_extraccion_de_biogas')
    op.drop_index(op.f('ix_res_agu_st_cantidad_de_aguas_residuales_industriales_id'), table_name='res_agu_st_cantidad_de_aguas_residuales_industriales')
    op.drop_table('res_agu_st_cantidad_de_aguas_residuales_industriales')
    op.drop_index(op.f('ix_res_agu_st_cantidad_de_aguas_residuales_domesticas_id'), table_name='res_agu_st_cantidad_de_aguas_residuales_domesticas')
    op.drop_table('res_agu_st_cantidad_de_aguas_residuales_domesticas')
    op.drop_index(op.f('ix_res_agu_sf_generacion_de_ch4_por_kg_dbo_tratado_id'), table_name='res_agu_sf_generacion_de_ch4_por_kg_dbo_tratado')
    op.drop_table('res_agu_sf_generacion_de_ch4_por_kg_dbo_tratado')
    op.drop_index(op.f('ix_res_agu_sf_generacion_de_ch4_por_kg_dbo_no_tratado_id'), table_name='res_agu_sf_generacion_de_ch4_por_kg_dbo_no_tratado')
    op.drop_table('res_agu_sf_generacion_de_ch4_por_kg_dbo_no_tratado')
    op.drop_index(op.f('ix_res_agu_sf_dbo_por_m3_de_agua_residual_industrial_tratada_id'), table_name='res_agu_sf_dbo_por_m3_de_agua_residual_industrial_tratada')
    op.drop_table('res_agu_sf_dbo_por_m3_de_agua_residual_industrial_tratada')
    op.drop_index(op.f('ix_res_agu_sf_dbo_por_m3_de_agua_residual_industrial_no_tratada_id'), table_name='res_agu_sf_dbo_por_m3_de_agua_residual_industrial_no_tratada')
    op.drop_table('res_agu_sf_dbo_por_m3_de_agua_residual_industrial_no_tratada')
    op.drop_index(op.f('ix_res_agu_sf_dbo_por_m3_de_agua_residual_domestica_tratada_id'), table_name='res_agu_sf_dbo_por_m3_de_agua_residual_domestica_tratada')
    op.drop_table('res_agu_sf_dbo_por_m3_de_agua_residual_domestica_tratada')
    op.drop_index(op.f('ix_res_agu_sf_dbo_por_m3_de_agua_residual_domestica_no_tratada_id'), table_name='res_agu_sf_dbo_por_m3_de_agua_residual_domestica_no_tratada')
    op.drop_table('res_agu_sf_dbo_por_m3_de_agua_residual_domestica_no_tratada')
    op.drop_index(op.f('ix_res_agu_sf_datos_de_la_generacion_energetica_de_las_estaciones_de_tratamiento_id'), table_name='res_agu_sf_datos_de_la_generacion_energetica_de_las_estaciones_de_tratamiento')
    op.drop_table('res_agu_sf_datos_de_la_generacion_energetica_de_las_estaciones_de_tratamiento')
    op.drop_index(op.f('ix_res_agu_sf_consumo_energetico_medio_por_tratamiento_id'), table_name='res_agu_sf_consumo_energetico_medio_por_tratamiento')
    op.drop_table('res_agu_sf_consumo_energetico_medio_por_tratamiento')
    op.drop_index(op.f('ix_res_agu_salidas_energia_producida_id'), table_name='res_agu_salidas_energia_producida')
    op.drop_table('res_agu_salidas_energia_producida')
    op.drop_index(op.f('ix_res_agu_salidas_energia_consumida_id'), table_name='res_agu_salidas_energia_consumida')
    op.drop_table('res_agu_salidas_energia_consumida')
    op.drop_index(op.f('ix_res_agu_emisiones_de_gases_de_efecto_invernadero_energia_id'), table_name='res_agu_emisiones_de_gases_de_efecto_invernadero_energia')
    op.drop_table('res_agu_emisiones_de_gases_de_efecto_invernadero_energia')
    op.drop_index(op.f('ix_res_agu_emisiones_de_gases_de_efecto_invernadero_aguas_residuales_id'), table_name='res_agu_emisiones_de_gases_de_efecto_invernadero_aguas_residuales')
    op.drop_table('res_agu_emisiones_de_gases_de_efecto_invernadero_aguas_residuales')
    op.drop_index(op.f('ix_indu_st_sustitucion_de_sao_y_hfc_id'), table_name='indu_st_sustitucion_de_sao_y_hfc')
    op.drop_table('indu_st_sustitucion_de_sao_y_hfc')
    op.drop_index(op.f('ix_indu_st_reduccion_de_consumo_energetico_por_aumento_en_la_eficiencia_energetica_id'), table_name='indu_st_reduccion_de_consumo_energetico_por_aumento_en_la_eficiencia_energetica')
    op.drop_table('indu_st_reduccion_de_consumo_energetico_por_aumento_en_la_eficiencia_energetica')
    op.drop_index(op.f('ix_indu_st_procesos_productivos_sostenibles_id'), table_name='indu_st_procesos_productivos_sostenibles')
    op.drop_table('indu_st_procesos_productivos_sostenibles')
    op.drop_index(op.f('ix_indu_st_eficiencia_energetica_reduccion_de_consumo_energetico_ladrilleras_id'), table_name='indu_st_eficiencia_energetica_reduccion_de_consumo_energetico_ladrilleras')
    op.drop_table('indu_st_eficiencia_energetica_reduccion_de_consumo_energetico_ladrilleras')
    op.drop_index(op.f('ix_indu_st_eficiencia_energetica_crecimiento_de_autogeneracion_y_cogeneracion_id'), table_name='indu_st_eficiencia_energetica_crecimiento_de_autogeneracion_y_cogeneracion')
    op.drop_table('indu_st_eficiencia_energetica_crecimiento_de_autogeneracion_y_cogeneracion')
    op.drop_index(op.f('ix_indu_st_eficiencia_energetica_autogeneracion_y_cogeneracion_ladrilleras_id'), table_name='indu_st_eficiencia_energetica_autogeneracion_y_cogeneracion_ladrilleras')
    op.drop_table('indu_st_eficiencia_energetica_autogeneracion_y_cogeneracion_ladrilleras')
    op.drop_index(op.f('ix_indu_sf_uso_energetico_por_combustible_id'), table_name='indu_sf_uso_energetico_por_combustible')
    op.drop_table('indu_sf_uso_energetico_por_combustible')
    op.drop_index(op.f('ix_indu_sf_produccion_de_cemento_id'), table_name='indu_sf_produccion_de_cemento')
    op.drop_table('indu_sf_produccion_de_cemento')
    op.drop_index(op.f('ix_indu_sf_produccion_de_acido_nitrico_id'), table_name='indu_sf_produccion_de_acido_nitrico')
    op.drop_table('indu_sf_produccion_de_acido_nitrico')
    op.drop_index(op.f('ix_indu_sf_produccion_anual_de_materiales_id'), table_name='indu_sf_produccion_anual_de_materiales')
    op.drop_table('indu_sf_produccion_anual_de_materiales')
    op.drop_index(op.f('ix_indu_sf_produccion_anual_de_ladrillos_id'), table_name='indu_sf_produccion_anual_de_ladrillos')
    op.drop_table('indu_sf_produccion_anual_de_ladrillos')
    op.drop_index(op.f('ix_indu_sf_indice_de_consumo_id'), table_name='indu_sf_indice_de_consumo')
    op.drop_table('indu_sf_indice_de_consumo')
    op.drop_index(op.f('ix_indu_sf_factor_de_utilizacion_de_autogeneracion_y_cogeneracion_id'), table_name='indu_sf_factor_de_utilizacion_de_autogeneracion_y_cogeneracion')
    op.drop_table('indu_sf_factor_de_utilizacion_de_autogeneracion_y_cogeneracion')
    op.drop_index(op.f('ix_indu_sf_excedentes_de_cogeneracion_id'), table_name='indu_sf_excedentes_de_cogeneracion')
    op.drop_table('indu_sf_excedentes_de_cogeneracion')
    op.drop_index(op.f('ix_indu_sf_excedentes_de_autogeneracion_id'), table_name='indu_sf_excedentes_de_autogeneracion')
    op.drop_table('indu_sf_excedentes_de_autogeneracion')
    op.drop_index(op.f('ix_indu_sf_emision_de_sao_id'), table_name='indu_sf_emision_de_sao')
    op.drop_table('indu_sf_emision_de_sao')
    op.drop_index(op.f('ix_indu_sf_distribucion_segun_tipo_de_combustible_ladrilleras_id'), table_name='indu_sf_distribucion_segun_tipo_de_combustible_ladrilleras')
    op.drop_table('indu_sf_distribucion_segun_tipo_de_combustible_ladrilleras')
    op.drop_index(op.f('ix_indu_sf_capacidad_instalada_de_cogeneracion_id'), table_name='indu_sf_capacidad_instalada_de_cogeneracion')
    op.drop_table('indu_sf_capacidad_instalada_de_cogeneracion')
    op.drop_index(op.f('ix_indu_sf_capacidad_instalada_de_autogeneracion_id'), table_name='indu_sf_capacidad_instalada_de_autogeneracion')
    op.drop_table('indu_sf_capacidad_instalada_de_autogeneracion')
    op.drop_index(op.f('ix_indu_salidas_por_tipo_de_industria_energia_requerida_id'), table_name='indu_salidas_por_tipo_de_industria_energia_requerida')
    op.drop_table('indu_salidas_por_tipo_de_industria_energia_requerida')
    op.drop_index(op.f('ix_indu_salidas_por_tipo_de_industria_energia_producida_por_autogeneracion_y_cogeneracion_id'), table_name='indu_salidas_por_tipo_de_industria_energia_producida_por_autogeneracion_y_cogeneracion')
    op.drop_table('indu_salidas_por_tipo_de_industria_energia_producida_por_autogeneracion_y_cogeneracion')
    op.drop_index(op.f('ix_indu_salidas_por_tipo_de_industria_balance_total_de_la_energia_requerida_id'), table_name='indu_salidas_por_tipo_de_industria_balance_total_de_la_energia_requerida')
    op.drop_table('indu_salidas_por_tipo_de_industria_balance_total_de_la_energia_requerida')
    op.drop_index(op.f('ix_indu_salidas_por_combustible_energia_requerida_id'), table_name='indu_salidas_por_combustible_energia_requerida')
    op.drop_table('indu_salidas_por_combustible_energia_requerida')
    op.drop_index(op.f('ix_indu_salidas_por_combustible_energia_producida_por_autogeneracion_y_cogeneracion_id'), table_name='indu_salidas_por_combustible_energia_producida_por_autogeneracion_y_cogeneracion')
    op.drop_table('indu_salidas_por_combustible_energia_producida_por_autogeneracion_y_cogeneracion')
    op.drop_index(op.f('ix_indu_salidas_por_combustible_balance_total_de_la_energia_requerida_id'), table_name='indu_salidas_por_combustible_balance_total_de_la_energia_requerida')
    op.drop_table('indu_salidas_por_combustible_balance_total_de_la_energia_requerida')
    op.drop_index(op.f('ix_indu_emisiones_sao_id'), table_name='indu_emisiones_sao')
    op.drop_table('indu_emisiones_sao')
    op.drop_index(op.f('ix_indu_emisiones_por_el_consumo_de_bagazo_y_otros_id'), table_name='indu_emisiones_por_el_consumo_de_bagazo_y_otros')
    op.drop_table('indu_emisiones_por_el_consumo_de_bagazo_y_otros')
    op.drop_index(op.f('ix_indu_emisiones_gases_efecto_invernadero_id'), table_name='indu_emisiones_gases_efecto_invernadero')
    op.drop_table('indu_emisiones_gases_efecto_invernadero')
    op.drop_index(op.f('ix_gana_st_produccion_de_estiercol_para_bioenergia_id'), table_name='gana_st_produccion_de_estiercol_para_bioenergia')
    op.drop_table('gana_st_produccion_de_estiercol_para_bioenergia')
    op.drop_index(op.f('ix_gana_st_practicas_sostenibles_en_suelos_ganaderos_crecimiento_estimado_de_superficies_id'), table_name='gana_st_practicas_sostenibles_en_suelos_ganaderos_crecimiento_estimado_de_superficies')
    op.drop_table('gana_st_practicas_sostenibles_en_suelos_ganaderos_crecimiento_estimado_de_superficies')
    op.drop_index(op.f('ix_gana_st_mejores_practicas_pecuarias_porcentaje_de_cabezas_de_ganado_id'), table_name='gana_st_mejores_practicas_pecuarias_porcentaje_de_cabezas_de_ganado')
    op.drop_table('gana_st_mejores_practicas_pecuarias_porcentaje_de_cabezas_de_ganado')
    op.drop_index(op.f('ix_gana_sf_uso_actual_de_la_tierra_sector_agropecuario_en_colombia_id'), table_name='gana_sf_uso_actual_de_la_tierra_sector_agropecuario_en_colombia')
    op.drop_table('gana_sf_uso_actual_de_la_tierra_sector_agropecuario_en_colombia')
    op.drop_index(op.f('ix_gana_sf_potencial_energetico_del_estiercol_id'), table_name='gana_sf_potencial_energetico_del_estiercol')
    op.drop_table('gana_sf_potencial_energetico_del_estiercol')
    op.drop_index(op.f('ix_gana_sf_potencial_de_reduccion_de_emisiones_practicas_sostenibles_en_suelos_ganaderos_id'), table_name='gana_sf_potencial_de_reduccion_de_emisiones_practicas_sostenibles_en_suelos_ganaderos')
    op.drop_table('gana_sf_potencial_de_reduccion_de_emisiones_practicas_sostenibles_en_suelos_ganaderos')
    op.drop_index(op.f('ix_gana_sf_potencial_de_reduccion_de_emisiones_de_mejores_practicas_pecuarias_id'), table_name='gana_sf_potencial_de_reduccion_de_emisiones_de_mejores_practicas_pecuarias')
    op.drop_table('gana_sf_potencial_de_reduccion_de_emisiones_de_mejores_practicas_pecuarias')
    op.drop_index(op.f('ix_gana_sf_hato_ganadero_colombiano_id'), table_name='gana_sf_hato_ganadero_colombiano')
    op.drop_table('gana_sf_hato_ganadero_colombiano')
    op.drop_index(op.f('ix_gana_sf_factor_produccion_de_estiercol_por_cabeza_de_ganado_y_emisiones_id'), table_name='gana_sf_factor_produccion_de_estiercol_por_cabeza_de_ganado_y_emisiones')
    op.drop_table('gana_sf_factor_produccion_de_estiercol_por_cabeza_de_ganado_y_emisiones')
    op.drop_index(op.f('ix_gana_sf_factor_de_emision_de_metano_ch4_por_genero_id'), table_name='gana_sf_factor_de_emision_de_metano_ch4_por_genero')
    op.drop_table('gana_sf_factor_de_emision_de_metano_ch4_por_genero')
    op.drop_index(op.f('ix_gana_sf_coeficiente_de_remocion_de_carbono_para_los_distintos_usos_de_suelo_y_ecorregion_anual_id'), table_name='gana_sf_coeficiente_de_remocion_de_carbono_para_los_distintos_usos_de_suelo_y_ecorregion_anual')
    op.drop_table('gana_sf_coeficiente_de_remocion_de_carbono_para_los_distintos_usos_de_suelo_y_ecorregion_anual')
    op.drop_index(op.f('ix_gana_sf_areas_iniciales_de_implementacion_para_practicas_sostenibles_en_suelos_ganaderos_id'), table_name='gana_sf_areas_iniciales_de_implementacion_para_practicas_sostenibles_en_suelos_ganaderos')
    op.drop_table('gana_sf_areas_iniciales_de_implementacion_para_practicas_sostenibles_en_suelos_ganaderos')
    op.drop_index(op.f('ix_gana_salidas_id'), table_name='gana_salidas')
    op.drop_table('gana_salidas')
    op.drop_index(op.f('ix_gana_emisiones_id'), table_name='gana_emisiones')
    op.drop_table('gana_emisiones')
    op.drop_index(op.f('ix_bosq_st_escenarios_de_deforestacion_id'), table_name='bosq_st_escenarios_de_deforestacion')
    op.drop_table('bosq_st_escenarios_de_deforestacion')
    op.drop_index(op.f('ix_bosq_st_desarrollo_y_consolidacion_de_la_cadena_productiva_de_las_plantaciones_forestales_con_fines_comerciales_id'), table_name='bosq_st_desarrollo_y_consolidacion_de_la_cadena_productiva_de_las_plantaciones_forestales_con_fines_comerciales')
    op.drop_table('bosq_st_desarrollo_y_consolidacion_de_la_cadena_productiva_de_las_plantaciones_forestales_con_fines_comerciales')
    op.drop_index(op.f('ix_bosq_sf_factor_de_conversion_de_biomasa_por_deforestacion_id'), table_name='bosq_sf_factor_de_conversion_de_biomasa_por_deforestacion')
    op.drop_table('bosq_sf_factor_de_conversion_de_biomasa_por_deforestacion')
    op.drop_index(op.f('ix_bosq_sf_descuentos_aplicables_a_reforestacion_comercial_id'), table_name='bosq_sf_descuentos_aplicables_a_reforestacion_comercial')
    op.drop_table('bosq_sf_descuentos_aplicables_a_reforestacion_comercial')
    op.drop_index(op.f('ix_bosq_sf_deforestacion_observada_no_acumulada_id'), table_name='bosq_sf_deforestacion_observada_no_acumulada')
    op.drop_table('bosq_sf_deforestacion_observada_no_acumulada')
    op.drop_index(op.f('ix_bosq_sf_contenidos_de_carbono_por_zonas_naturales_id'), table_name='bosq_sf_contenidos_de_carbono_por_zonas_naturales')
    op.drop_table('bosq_sf_contenidos_de_carbono_por_zonas_naturales')
    op.drop_index(op.f('ix_bosq_sf_biomasa_aerea_subterranea_reforestacion_comercial_id'), table_name='bosq_sf_biomasa_aerea_subterranea_reforestacion_comercial')
    op.drop_table('bosq_sf_biomasa_aerea_subterranea_reforestacion_comercial')
    op.drop_index(op.f('ix_bosq_sf_area_para_la_reforestacion_comercial_id'), table_name='bosq_sf_area_para_la_reforestacion_comercial')
    op.drop_table('bosq_sf_area_para_la_reforestacion_comercial')
    op.drop_index(op.f('ix_bosq_sf_area_anual_deforestada_puntual_id'), table_name='bosq_sf_area_anual_deforestada_puntual')
    op.drop_table('bosq_sf_area_anual_deforestada_puntual')
    op.drop_index(op.f('ix_bosq_salidas_id'), table_name='bosq_salidas')
    op.drop_table('bosq_salidas')
    op.drop_index(op.f('ix_bosq_emisiones_id'), table_name='bosq_emisiones')
    op.drop_table('bosq_emisiones')
    op.drop_index(op.f('ix_agro_st_tierra_dedicada_para_biocombustibles_superficie_de_implementacion_id'), table_name='agro_st_tierra_dedicada_para_biocombustibles_superficie_de_implementacion')
    op.drop_table('agro_st_tierra_dedicada_para_biocombustibles_superficie_de_implementacion')
    op.drop_index(op.f('ix_agro_st_mejores_practicas_agricolas_superficie_de_implementacion_id'), table_name='agro_st_mejores_practicas_agricolas_superficie_de_implementacion')
    op.drop_table('agro_st_mejores_practicas_agricolas_superficie_de_implementacion')
    op.drop_index(op.f('ix_agro_sf_uso_actual_de_la_tierra_sector_agropecuario_en_colombia_id'), table_name='agro_sf_uso_actual_de_la_tierra_sector_agropecuario_en_colombia')
    op.drop_table('agro_sf_uso_actual_de_la_tierra_sector_agropecuario_en_colombia')
    op.drop_index(op.f('ix_agro_sf_tasas_de_crecimiento_del_pib_sectorial_de_agricultura_id'), table_name='agro_sf_tasas_de_crecimiento_del_pib_sectorial_de_agricultura')
    op.drop_table('agro_sf_tasas_de_crecimiento_del_pib_sectorial_de_agricultura')
    op.drop_index(op.f('ix_agro_sf_produccion_biocombustibles_id'), table_name='agro_sf_produccion_biocombustibles')
    op.drop_table('agro_sf_produccion_biocombustibles')
    op.drop_index(op.f('ix_agro_sf_potencial_energetico_por_unidad_de_biomasa_id'), table_name='agro_sf_potencial_energetico_por_unidad_de_biomasa')
    op.drop_table('agro_sf_potencial_energetico_por_unidad_de_biomasa')
    op.drop_index(op.f('ix_agro_sf_porcentaje_del_cultivo_usado_para_biocombustibles_id'), table_name='agro_sf_porcentaje_del_cultivo_usado_para_biocombustibles')
    op.drop_table('agro_sf_porcentaje_del_cultivo_usado_para_biocombustibles')
    op.drop_index(op.f('ix_agro_sf_factor_de_produccion_de_biocombustibles_por_ha_segun_tipo_de_cultivo_id'), table_name='agro_sf_factor_de_produccion_de_biocombustibles_por_ha_segun_tipo_de_cultivo')
    op.drop_table('agro_sf_factor_de_produccion_de_biocombustibles_por_ha_segun_tipo_de_cultivo')
    op.drop_index(op.f('ix_agro_sf_factor_de_produccion_biomasa_por_cultivo_id'), table_name='agro_sf_factor_de_produccion_biomasa_por_cultivo')
    op.drop_table('agro_sf_factor_de_produccion_biomasa_por_cultivo')
    op.drop_index(op.f('ix_agro_sf_factor_de_emision_de_cultivo_usado_para_biocombustibles_id'), table_name='agro_sf_factor_de_emision_de_cultivo_usado_para_biocombustibles')
    op.drop_table('agro_sf_factor_de_emision_de_cultivo_usado_para_biocombustibles')
    op.drop_index(op.f('ix_agro_sf_areas_de_implementacion_de_mejores_practicas_agricolas_id'), table_name='agro_sf_areas_de_implementacion_de_mejores_practicas_agricolas')
    op.drop_table('agro_sf_areas_de_implementacion_de_mejores_practicas_agricolas')
    op.drop_index(op.f('ix_agro_salidas_cultivos_id'), table_name='agro_salidas_cultivos')
    op.drop_table('agro_salidas_cultivos')
    op.drop_index(op.f('ix_agro_salidas_biocombustibles_id'), table_name='agro_salidas_biocombustibles')
    op.drop_table('agro_salidas_biocombustibles')
    op.drop_index(op.f('ix_agro_emisiones_id'), table_name='agro_emisiones')
    op.drop_table('agro_emisiones')
    # ### end Alembic commands ###
