version: '3.8'

services:
    app:
        container_name: app
        restart: unless-stopped
        build: .
        volumes:
            - api-data:/api
        expose:
            - 8000
        # ports:
        #     - 8000:8000
        # depends_on:
        #     - db
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.app.rule=Host(`app.localhost`)"
            # - "traefik.http.routers.app.loadbalancer.server.port=8000"
        command: ./start.sh
    
    traefik:
        container_name: traefik
        restart: unless-stopped
        image: traefik:v2.10.4
        ports:
            - 8008:80
            # - 8000:8000
            - 8080:8080
        depends_on:
            - app
        volumes:
            - "./traefik.dev.toml:/etc/traefik/traefik.toml"
            - "/var/run/docker.sock:/var/run/docker.sock:ro"

    # db:
    #     container_name: db
    #     restart: unless-stopped
    #     image: postgres:11.2
    #     volumes:
    #         - app-db-data:/var/lib/postgresql/data/pgdata
    #     env_file:
    #         - .env
    #     environment:
    #         - PGDATA=/var/lib/postgresql/data/pgdata
        

volumes:
    # app-db-data:
    api-data:
