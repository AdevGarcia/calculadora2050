version: '3.8'

services:
    traefik:
        image: traefik:v2.10.4
        container_name: traefik
        restart: always
        ports:
            # Listen on port 80, default for HTTP, necessary to redirect to HTTPS
            - 80:80
            # Listen on port 8080, insecure Dashboard
            - 8080:8080
        volumes:
            # Add Docker as a mounted volume, so that Traefik can read the labels of other services
            - /var/run/docker.sock:/var/run/docker.sock:ro
        command: 
            # Enable Docker in Traefik, so that it reads labels from Doker services
            - --providers.docker
            # Do not expose all Docker services, only the ones explicitly exposed
            - --providers.docker.exposedbydefault=false
            # Create a entrypoint "http" listening on port 80
            - --entrypoints.http.address=:80
            # Enable the access log, with HTTP requests
            - --accesslog
            # Enable the Traefik log, for configurations and errors
            - --log
            # Dashboard
            - --api.insecure # Don't do that in production#

    app:
        container_name: app
        restart: unless-stopped
        build:
            context: .
            dockerfile: Dockerfile.dev
        env_file:
            - .env.dev
        volumes:
            - api-data:/api
        labels:
            # Enable Traefik for this specific "backend" service
            - traefik.enable=true
            # Our service listens on 8000 labels:
            - --port=8000
            # Define the port inside of the Docker service to use
            - traefik.http.services.app.loadbalancer.server.port=8000
            # Make Traefik use this domain in HTTP
            - traefik.http.routers.app.entrypoints=http
            - traefik.http.routers.app.rule=Host(`api.geoidom.com`)
            # Use the traefik-public network (declared below)
            - traefik.docker.network=traefik-public
        command: ./start.dev.sh

volumes:
    api-data:
