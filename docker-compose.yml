version: '3.8'

services:
    app:
        container_name: app
        restart: unless-stopped
        build: .
        volumes:
            - api-data:/api
        # depends_on:
        #     - db
        labels:
            # Enable Traefik for this specific "backend" service
            - traefik.enable=true
            # Our service listens on 8000 labels:
            - --port=8000
            # Define the port inside of the Docker service to use
            - traefik.http.services.app.loadbalancer.server.port=8000
            # Make Traefik use this domain in HTTP
            - traefik.http.routers.app-http.entrypoints=http
            - traefik.http.routers.app-http.rule=Host(`localhost`)
            # Use the traefik-public network (declared below)
            - traefik.docker.network=traefik-public
        command: ./start.sh
        networks:
        # Use the public network created to be shared between Traefik and
        # any other service that needs to be publicly available with HTTPS
        - traefik-public  
    
    # traefik:
    #     container_name: traefik
    #     restart: unless-stopped
    #     image: traefik:v2.10.4
    #     ports:
    #         - 80:80
    #         - 8080:8080
    #     depends_on:
    #         - app
    #     volumes:
    #         - "./traefik.dev.toml:/etc/traefik/traefik.toml"
    #         - "/var/run/docker.sock:/var/run/docker.sock:ro"

    # db:
    #     container_name: db
    #     restart: unless-stopped
    #     image: postgres:11.2
    #     volumes:
    #         - app-db-data:/var/lib/postgresql/data/pgdata
    #     env_file:
    #         - .env
    #     environment:
    #         - PGDATA=/var/lib/postgresql/data/pgdata
        

volumes:
    # app-db-data:
    api-data:

networks:
  # Use the previously created public network "traefik-public", shared with other
  # services taht need to be publicly available via this Traefik
  traefik-public:
    external: true